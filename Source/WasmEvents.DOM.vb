Namespace Global.RemObjects.Elements.WebAssembly

  //this code has no meaning in any other language than Mercury, because it works on the Handles clauses (which are Mercury only) that are used in the code.

  Public class HTMLElement_EventProxy
    Implements HTMLElement

    Public ReadOnly Property HtmlElement As HTMLElement Implements Public HTMLElement

    Public Sub New(element As Element)
      _HtmlElement = DirectCast(element, HTMLElement)
    End Sub

    Public Sub New(element As Dynamic)
      _HtmlElement = DirectCast(element, HTMLElement)
    End Sub

    //performance: only wire the Html events that are handled in code, is called by the IntializeComponents code that is generated by the Html code generator

    ' onFullScreenChange

    Public Delegate Sub OnFullScreenChangeDelegate(sender as HTMLElement, e As Dom.Event)

    Public Event onFullScreenChange As OnFullScreenChangeDelegate ' Add AddOnFullScreenChange Remove RemoveOnFullScreenChange
    Private Event _onFullScreenChange As OnFullScreenChangeDelegate

    Private Sub AddOnFullScreenChange(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
      If Not assigned(_onFullScreenChange) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onFullScreenChange", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onFullScreenChange(sender, CType(e, Dom.Event)))
      End If
      AddHandler _onFullScreenChange, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnFullScreenChangeDelegate)
      RemoveHandler _onFullScreenChange, aEvent
      If Not assigned(_onFullScreenChange) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onFullScreenChange")
      End If
    End Sub

    ' onFullScreenError

    Public Delegate Sub OnFullScreenErrorDelegate(sender as HTMLElement, e As Dom.Event)

    Public Event onFullScreenError As OnFullScreenErrorDelegate ' Add AddOnFullScreenError Remove RemoveOnFullScreenError
    Private Event _onFullScreenError As OnFullScreenErrorDelegate

    Private Sub AddOnFullScreenError(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
      If Not assigned(_onFullScreenError) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onFullScreenError", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onFullScreenError(sender, CType(e, Dom.Event)))
      End If
      AddHandler _onFullScreenError, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnFullScreenErrorDelegate)
      RemoveHandler _onFullScreenError, aEvent
      If Not assigned(_onFullScreenError) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onFullScreenError")
      End If
    End Sub

    ' onAbort

    Public Delegate Sub OnAbortDelegate(sender as HTMLElement, e As Dom.Event)

    Public Event onAbort As OnAbortDelegate ' Add AddOnAbort Remove RemoveOnAbort
    Private Event _onAbort As OnAbortDelegate

    Private Sub AddOnAbort(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
      If Not assigned(_onAbort) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onAbort", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onAbort(sender, CType(e, Dom.Event)))
      End If
      AddHandler _onAbort, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnAbortDelegate)
      RemoveHandler _onAbort, aEvent
      If Not assigned(_onAbort) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onAbort")
      End If
    End Sub

    ' onBlur

    Public Delegate Sub OnBlurDelegate(sender as HTMLElement, e As Dom.Event)

    Public Event onBlur As OnBlurDelegate ' Add AddOnBlur Remove RemoveOnBlur
    Private Event _onBlur As OnBlurDelegate

    Private Sub AddOnBlur(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
      If Not assigned(_onBlur) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onBlur", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onBlur(sender, CType(e, Dom.Event)))
      End If
      AddHandler _onBlur, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnBlurDelegate)
      RemoveHandler _onBlur, aEvent
      If Not assigned(_onBlur) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onBlur")
      End If
    End Sub

    ' onError

    Public Delegate Sub OnErrorDelegate(sender as HTMLElement, e As UIEvent)

    Public Event onError As OnErrorDelegate ' Add AddOnError Remove RemoveOnError
    Private Event _onError As OnErrorDelegate

    Private Sub AddOnError(aEvent As Sub(sender as HTMLElement, e As UIEvent))
      If Not assigned(_onError) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onError", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onError(sender, CType(e, UIEvent)))
      End If
      AddHandler _onError, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnErrorDelegate)
      RemoveHandler _onError, aEvent
      If Not assigned(_onError) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onError")
      End If
    End Sub

    ' onFocus

    Public Delegate Sub OnFocusDelegate(sender as HTMLElement, e As FocusEvent)

    Public Event onFocus As OnFocusDelegate ' Add AddOnFocus Remove RemoveOnFocus
    Private Event _onFocus As OnFocusDelegate

    Private Sub AddOnFocus(aEvent As Sub(sender as HTMLElement, e As FocusEvent))
      If Not assigned(_onFocus) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onFocus", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onFocus(sender, CType(e, FocusEvent)))
      End If
      AddHandler _onFocus, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnFocusDelegate)
      RemoveHandler _onFocus, aEvent
      If Not assigned(_onFocus) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onFocus")
      End If
    End Sub

    ' onCancel

    Public Delegate Sub OnCancelDelegate(sender as HTMLElement, e As Dom.Event)

    Public Event onCancel As OnCancelDelegate ' Add AddOnCancel Remove RemoveOnCancel
    Private Event _onCancel As OnCancelDelegate

    Private Sub AddOnCancel(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
      If Not assigned(_onCancel) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onCancel", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onCancel(sender, CType(e, Dom.Event)))
      End If
      AddHandler _onCancel, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnCancelDelegate)
      RemoveHandler _onCancel, aEvent
      If Not assigned(_onCancel) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onCancel")
      End If
    End Sub

    ' onCanplay

    Public Delegate Sub OnCanplayDelegate(sender as HTMLElement, e As Dom.Event)

    Public Event onCanplay As OnCanplayDelegate ' Add AddOnCanplay Remove RemoveOnCanplay
    Private Event _onCanplay As OnCanplayDelegate

    Private Sub AddOnCanplay(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
      If Not assigned(_onCanplay) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onCanplay", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onCanplay(sender, CType(e, Dom.Event)))
      End If
      AddHandler _onCanplay, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnCanplayDelegate)
      RemoveHandler _onCanplay, aEvent
      If Not assigned(_onCanplay) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onCanplay")
      End If
    End Sub

    ' onCanplayThrough

    Public Delegate Sub OnCanplayThroughDelegate(sender as HTMLElement, e As Dom.Event)

    Public Event onCanplayThrough As OnCanplayThroughDelegate ' Add AddOnCanplayThrough Remove RemoveOnCanplayThrough
    Private Event _onCanplayThrough As OnCanplayThroughDelegate

    Private Sub AddOnCanplayThrough(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
      If Not assigned(_onCanplayThrough) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onCanplayThrough", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onCanplayThrough(sender, CType(e, Dom.Event)))
      End If
      AddHandler _onCanplayThrough, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnCanplayThroughDelegate)
      RemoveHandler _onCanplayThrough, aEvent
      If Not assigned(_onCanplayThrough) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onCanplayThrough")
      End If
    End Sub

    ' onChange

    Public Delegate Sub OnChangeDelegate(sender as HTMLElement, e As Dom.Event)

    Public Event onChange As OnChangeDelegate ' Add AddOnChange Remove RemoveOnChange
    Private Event _onChange As OnChangeDelegate

    Private Sub AddOnChange(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
      If Not assigned(_onChange) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onChange", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onChange(sender, CType(e, Dom.Event)))
      End If
      AddHandler _onChange, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnChangeDelegate)
      RemoveHandler _onChange, aEvent
      If Not assigned(_onChange) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onChange")
      End If
    End Sub

    ' onClick

    Public Delegate Sub OnClickDelegate(sender as HTMLElement, e As MouseEvent)

    Public Event onClick As OnClickDelegate ' Add AddOnClick Remove RemoveOnClick
    Private Event _onClick As OnClickDelegate

    Private Sub AddOnClick(aEvent As Sub(sender as HTMLElement, e As MouseEvent))
      If Not assigned(_onClick) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onClick", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onClick(sender, CType(e, MouseEvent)))
      End If
      AddHandler _onClick, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnClickDelegate)
      RemoveHandler _onClick, aEvent
      If Not assigned(_onClick) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onClick")
      End If
    End Sub

    ' onClose

    Public Delegate Sub OnCloseDelegate(sender as HTMLElement, e As FocusEvent)

    Public Event onClose As OnCloseDelegate ' Add AddOnClose Remove RemoveOnClose
    Private Event _onClose As OnCloseDelegate

    Private Sub AddOnClose(aEvent As Sub(sender as HTMLElement, e As FocusEvent))
      If Not assigned(_onClose) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onClose", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onClose(sender, CType(e, FocusEvent)))
      End If
      AddHandler _onClose, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnCloseDelegate)
      RemoveHandler _onClose, aEvent
      If Not assigned(_onClose) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onClose")
      End If
    End Sub

    ' onContextMenu

    Public Delegate Sub OnContextMenuDelegate(sender as HTMLElement, e As MouseEvent)

    Public Event onContextMenu As OnContextMenuDelegate ' Add AddOnContextMenu Remove RemoveOnContextMenu
    Private Event _onContextMenu As OnContextMenuDelegate

    Private Sub AddOnContextMenu(aEvent As Sub(sender as HTMLElement, e As MouseEvent))
      If Not assigned(_onContextMenu) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onContextMenu", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onContextMenu(sender, CType(e, MouseEvent)))
      End If
      AddHandler _onContextMenu, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnContextMenuDelegate)
      RemoveHandler _onContextMenu, aEvent
      If Not assigned(_onContextMenu) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onContextMenu")
      End If
    End Sub

    ' onCueChange

    Public Delegate Sub OnCueChangeDelegate(sender as HTMLElement, e As FocusEvent)

    Public Event onCueChange As OnCueChangeDelegate ' Add AddOnCueChange Remove RemoveOnCueChange
    Private Event _onCueChange As OnCueChangeDelegate

    Private Sub AddOnCueChange(aEvent As Sub(sender as HTMLElement, e As FocusEvent))
      If Not assigned(_onCueChange) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onCueChange", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onCueChange(sender, CType(e, FocusEvent)))
      End If
      AddHandler _onCueChange, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnCueChangeDelegate)
      RemoveHandler _onCueChange, aEvent
      If Not assigned(_onCueChange) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onCueChange")
      End If
    End Sub

    ' onDblClick

    Public Delegate Sub OnDblClickDelegate(sender as HTMLElement, e As MouseEvent)

    Public Event onDblClick As OnDblClickDelegate ' Add AddOnDblClick Remove RemoveOnDblClick
    Private Event _onDblClick As OnDblClickDelegate

    Private Sub AddOnDblClick(aEvent As Sub(sender as HTMLElement, e As MouseEvent))
      If Not assigned(_onDblClick) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onDblClick", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onDblClick(sender, CType(e, MouseEvent)))
      End If
      AddHandler _onDblClick, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnDblClickDelegate)
      RemoveHandler _onDblClick, aEvent
      If Not assigned(_onDblClick) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onDblClick")
      End If
    End Sub

    ' onDrag

    Public Delegate Sub OnDragDelegate(sender as HTMLElement, e As DragEvent)

    Public Event onDrag As OnDragDelegate ' Add AddOnDrag Remove RemoveOnDrag
    Private Event _onDrag As OnDragDelegate

    Private Sub AddOnDrag(aEvent As Sub(sender as HTMLElement, e As DragEvent))
      If Not assigned(_onDrag) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onDrag", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onDrag(sender, CType(e, DragEvent)))
      End If
      AddHandler _onDrag, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnDragDelegate)
      RemoveHandler _onDrag, aEvent
      If Not assigned(_onDrag) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onDrag")
      End If
    End Sub

    ' onDragEnd

    Public Delegate Sub OnDragEndDelegate(sender as HTMLElement, e As DragEvent)

    Public Event onDragEnd As OnDragEndDelegate ' Add AddOnDragEnd Remove RemoveOnDragEnd
    Private Event _onDragEnd As OnDragEndDelegate

    Private Sub AddOnDragEnd(aEvent As Sub(sender as HTMLElement, e As DragEvent))
      If Not assigned(_onDragEnd) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onDragEnd", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onDragEnd(sender, CType(e, DragEvent)))
      End If
      AddHandler _onDragEnd, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnDragEndDelegate)
      RemoveHandler _onDragEnd, aEvent
      If Not assigned(_onDragEnd) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onDragEnd")
      End If
    End Sub

    ' onDragEnter

    Public Delegate Sub OnDragEnterDelegate(sender as HTMLElement, e As DragEvent)

    Public Event onDragEnter As OnDragEnterDelegate ' Add AddOnDragEnter Remove RemoveOnDragEnter
    Private Event _onDragEnter As OnDragEnterDelegate

    Private Sub AddOnDragEnter(aEvent As Sub(sender as HTMLElement, e As DragEvent))
      If Not assigned(_onDragEnter) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onDragEnter", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onDragEnter(sender, CType(e, DragEvent)))
      End If
      AddHandler _onDragEnter, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnDragEnterDelegate)
      RemoveHandler _onDragEnter, aEvent
      If Not assigned(_onDragEnter) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onDragEnter")
      End If
    End Sub

    ' onDragExit

    Public Delegate Sub OnDragExitDelegate(sender as HTMLElement, e As DragEvent)

    Public Event onDragExit As OnDragExitDelegate ' Add AddOnDragExit Remove RemoveOnDragExit
    Private Event _onDragExit As OnDragExitDelegate

    Private Sub AddOnDragExit(aEvent As Sub(sender as HTMLElement, e As DragEvent))
      If Not assigned(_onDragExit) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onDragExit", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onDragExit(sender, CType(e, DragEvent)))
      End If
      AddHandler _onDragExit, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnDragExitDelegate)
      RemoveHandler _onDragExit, aEvent
      If Not assigned(_onDragExit) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onDragExit")
      End If
    End Sub

    ' onDragLeave

    Public Delegate Sub OnDragLeaveDelegate(sender as HTMLElement, e As DragEvent)

    Public Event onDragLeave As OnDragLeaveDelegate ' Add AddOnDragLeave Remove RemoveOnDragLeave
    Private Event _onDragLeave As OnDragLeaveDelegate

    Private Sub AddOnDragLeave(aEvent As Sub(sender as HTMLElement, e As DragEvent))
      If Not assigned(_onDragLeave) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onDragLeave", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onDragLeave(sender, CType(e, DragEvent)))
      End If
      AddHandler _onDragLeave, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnDragLeaveDelegate)
      RemoveHandler _onDragLeave, aEvent
      If Not assigned(_onDragLeave) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onDragLeave")
      End If
    End Sub

    ' onDragOver

    Public Delegate Sub OnDragOverDelegate(sender as HTMLElement, e As DragEvent)

    Public Event onDragOver As OnDragOverDelegate ' Add AddOnDragOver Remove RemoveOnDragOver
    Private Event _onDragOver As OnDragOverDelegate

    Private Sub AddOnDragOver(aEvent As Sub(sender as HTMLElement, e As DragEvent))
      If Not assigned(_onDragOver) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onDragOver", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onDragOver(sender, CType(e, DragEvent)))
      End If
      AddHandler _onDragOver, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnDragOverDelegate)
      RemoveHandler _onDragOver, aEvent
      If Not assigned(_onDragOver) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onDragOver")
      End If
    End Sub

    ' onDragStart

    Public Delegate Sub OnDragStartDelegate(sender as HTMLElement, e As DragEvent)

    Public Event onDragStart As OnDragStartDelegate ' Add AddOnDragStart Remove RemoveOnDragStart
    Private Event _onDragStart As OnDragStartDelegate

    Private Sub AddOnDragStart(aEvent As Sub(sender as HTMLElement, e As DragEvent))
      If Not assigned(_onDragStart) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onDragStart", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onDragStart(sender, CType(e, DragEvent)))
      End If
      AddHandler _onDragStart, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnDragStartDelegate)
      RemoveHandler _onDragStart, aEvent
      If Not assigned(_onDragStart) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onDragStart")
      End If
    End Sub

    ' onDrop

    Public Delegate Sub OnDropDelegate(sender as HTMLElement, e As DragEvent)

    Public Event onDrop As OnDropDelegate ' Add AddOnDrop Remove RemoveOnDrop
    Private Event _onDrop As OnDropDelegate

    Private Sub AddOnDrop(aEvent As Sub(sender as HTMLElement, e As DragEvent))
      If Not assigned(_onDrop) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onDrop", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onDrop(sender, CType(e, DragEvent)))
      End If
      AddHandler _onDrop, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnDropDelegate)
      RemoveHandler _onDrop, aEvent
      If Not assigned(_onDrop) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onDrop")
      End If
    End Sub

    ' onDurationChange

    Public Delegate Sub OnDurationChangeDelegate(sender as HTMLElement, e As Dom.Event)

    Public Event onDurationChange As OnDurationChangeDelegate ' Add AddOnDurationChange Remove RemoveOnDurationChange
    Private Event _onDurationChange As OnDurationChangeDelegate

    Private Sub AddOnDurationChange(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
      If Not assigned(_onDurationChange) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onDurationChange", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onDurationChange(sender, CType(e, Dom.Event)))
      End If
      AddHandler _onDurationChange, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnDurationChangeDelegate)
      RemoveHandler _onDurationChange, aEvent
      If Not assigned(_onDurationChange) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onDurationChange")
      End If
    End Sub

    ' onEmptied

    Public Delegate Sub OnEmptiedDelegate(sender as HTMLElement, e As Dom.Event)

    Public Event onEmptied As OnEmptiedDelegate ' Add AddOnEmptied Remove RemoveOnEmptied
    Private Event _onEmptied As OnEmptiedDelegate

    Private Sub AddOnEmptied(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
      If Not assigned(_onEmptied) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onEmptied", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onEmptied(sender, CType(e, Dom.Event)))
      End If
      AddHandler _onEmptied, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnEmptiedDelegate)
      RemoveHandler _onEmptied, aEvent
      If Not assigned(_onEmptied) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onEmptied")
      End If
    End Sub

    ' onEnded

    Public Delegate Sub OnEndedDelegate(sender as HTMLElement, e As Dom.Event)

    Public Event onEnded As OnEndedDelegate ' Add AddOnEnded Remove RemoveOnEnded
    Private Event _onEnded As OnEndedDelegate

    Private Sub AddOnEnded(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
      If Not assigned(_onEnded) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onEnded", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onEnded(sender, CType(e, Dom.Event)))
      End If
      AddHandler _onEnded, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnEndedDelegate)
      RemoveHandler _onEnded, aEvent
      If Not assigned(_onEnded) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onEnded")
      End If
    End Sub

    ' onFormData

    Public Delegate Sub OnFormDataDelegate(sender as HTMLElement, e As Dom.Event)

    Public Event onFormData As OnFormDataDelegate ' Add AddOnFormData Remove RemoveOnFormData
    Private Event _onFormData As OnFormDataDelegate

    Private Sub AddOnFormData(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
      If Not assigned(_onFormData) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onFormData", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onFormData(sender, CType(e, Dom.Event)))
      End If
      AddHandler _onFormData, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnFormDataDelegate)
      RemoveHandler _onFormData, aEvent
      If Not assigned(_onFormData) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onFormData")
      End If
    End Sub

    ' onGotPointerCapture

    Public Delegate Sub OnGotPointerCaptureDelegate(sender as HTMLElement, e As PointerEvent)

    Public Event onGotPointerCapture As OnGotPointerCaptureDelegate ' Add AddOnGotPointerCapture Remove RemoveOnGotPointerCapture
    Private Event _onGotPointerCapture As OnGotPointerCaptureDelegate

    Private Sub AddOnGotPointerCapture(aEvent As Sub(sender as HTMLElement, e As PointerEvent))
      If Not assigned(_onGotPointerCapture) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onGotPointerCapture", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onGotPointerCapture(sender, CType(e, PointerEvent)))
      End If
      AddHandler _onGotPointerCapture, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnGotPointerCaptureDelegate)
      RemoveHandler _onGotPointerCapture, aEvent
      If Not assigned(_onGotPointerCapture) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onGotPointerCapture")
      End If
    End Sub

    ' onInput

    Public Delegate Sub OnInputDelegate(sender as HTMLElement, e As Dom.Event)

    Public Event onInput As OnInputDelegate ' Add AddOnInput Remove RemoveOnInput
    Private Event _onInput As OnInputDelegate

    Private Sub AddOnInput(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
      If Not assigned(_onInput) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onInput", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onInput(sender, CType(e, Dom.Event)))
      End If
      AddHandler _onInput, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnInputDelegate)
      RemoveHandler _onInput, aEvent
      If Not assigned(_onInput) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onInput")
      End If
    End Sub

    ' onInvalid

    Public Delegate Sub OnInvalidDelegate(sender as HTMLElement, e As Dom.Event)

    Public Event onInvalid As OnInvalidDelegate ' Add AddOnInvalid Remove RemoveOnInvalid
    Private Event _onInvalid As OnInvalidDelegate

    Private Sub AddOnInvalid(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
      If Not assigned(_onInvalid) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onInvalid", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onInvalid(sender, CType(e, Dom.Event)))
      End If
      AddHandler _onInvalid, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnInvalidDelegate)
      RemoveHandler _onInvalid, aEvent
      If Not assigned(_onInvalid) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onInvalid")
      End If
    End Sub

    ' onKeyDown

    Public Delegate Sub OnKeyDownDelegate(sender as HTMLElement, e As KeyboardEvent)

    Public Event onKeyDown As OnKeyDownDelegate ' Add AddOnKeyDown Remove RemoveOnKeyDown
    Private Event _onKeyDown As OnKeyDownDelegate

    Private Sub AddOnKeyDown(aEvent As Sub(sender as HTMLElement, e As KeyboardEvent))
      If Not assigned(_onKeyDown) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onKeyDown", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onKeyDown(sender, CType(e, KeyboardEvent)))
      End If
      AddHandler _onKeyDown, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnKeyDownDelegate)
      RemoveHandler _onKeyDown, aEvent
      If Not assigned(_onKeyDown) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onKeyDown")
      End If
    End Sub

    ' onKeyPress

    Public Delegate Sub OnKeyPressDelegate(sender as HTMLElement, e As KeyboardEvent)

    Public Event onKeyPress As OnKeyPressDelegate ' Add AddOnKeyPress Remove RemoveOnKeyPress
    Private Event _onKeyPress As OnKeyPressDelegate

    Private Sub AddOnKeyPress(aEvent As Sub(sender as HTMLElement, e As KeyboardEvent))
      If Not assigned(_onKeyPress) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onKeyPress", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onKeyPress(sender, CType(e, KeyboardEvent)))
      End If
      AddHandler _onKeyPress, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnKeyPressDelegate)
      RemoveHandler _onKeyPress, aEvent
      If Not assigned(_onKeyPress) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onKeyPress")
      End If
    End Sub

    ' onKeyUp

    Public Delegate Sub OnKeyUpDelegate(sender as HTMLElement, e As KeyboardEvent)

    Public Event onKeyUp As OnKeyUpDelegate ' Add AddOnKeyUp Remove RemoveOnKeyUp
    Private Event _onKeyUp As OnKeyUpDelegate

    Private Sub AddOnKeyUp(aEvent As Sub(sender as HTMLElement, e As KeyboardEvent))
      If Not assigned(_onKeyUp) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onKeyUp", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onKeyUp(sender, CType(e, KeyboardEvent)))
      End If
      AddHandler _onKeyUp, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnKeyUpDelegate)
      RemoveHandler _onKeyUp, aEvent
      If Not assigned(_onKeyUp) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onKeyUp")
      End If
    End Sub

    ' onLoad

    Public Delegate Sub OnLoadDelegate(sender as HTMLElement, e As Dom.Event)

    Public Event onLoad As OnLoadDelegate ' Add AddOnLoad Remove RemoveOnLoad
    Private Event _onLoad As OnLoadDelegate

    Private Sub AddOnLoad(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
      If Not assigned(_onLoad) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onLoad", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onLoad(sender, CType(e, Dom.Event)))
      End If
      AddHandler _onLoad, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnLoadDelegate)
      RemoveHandler _onLoad, aEvent
      If Not assigned(_onLoad) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onLoad")
      End If
    End Sub

    ' onLoadedData

    Public Delegate Sub OnLoadedDataDelegate(sender as HTMLElement, e As Dom.Event)

    Public Event onLoadedData As OnLoadedDataDelegate ' Add AddOnLoadedData Remove RemoveOnLoadedData
    Private Event _onLoadedData As OnLoadedDataDelegate

    Private Sub AddOnLoadedData(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
      If Not assigned(_onLoadedData) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onLoadedData", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onLoadedData(sender, CType(e, Dom.Event)))
      End If
      AddHandler _onLoadedData, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnLoadedDataDelegate)
      RemoveHandler _onLoadedData, aEvent
      If Not assigned(_onLoadedData) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onLoadedData")
      End If
    End Sub

    ' onLoadedMetaData

    Public Delegate Sub OnLoadedMetaDataDelegate(sender as HTMLElement, e As Dom.Event)

    Public Event onLoadedMetaData As OnLoadedMetaDataDelegate ' Add AddOnLoadedMetaData Remove RemoveOnLoadedMetaData
    Private Event _onLoadedMetaData As OnLoadedMetaDataDelegate

    Private Sub AddOnLoadedMetaData(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
      If Not assigned(_onLoadedMetaData) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onLoadedMetaData", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onLoadedMetaData(sender, CType(e, Dom.Event)))
      End If
      AddHandler _onLoadedMetaData, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnLoadedMetaDataDelegate)
      RemoveHandler _onLoadedMetaData, aEvent
      If Not assigned(_onLoadedMetaData) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onLoadedMetaData")
      End If
    End Sub

    ' onLoadEnd

    Public Delegate Sub OnLoadEndDelegate(sender as HTMLElement, e As ProgressEvent)

    Public Event onLoadEnd As OnLoadEndDelegate ' Add AddOnLoadEnd Remove RemoveOnLoadEnd
    Private Event _onLoadEnd As OnLoadEndDelegate

    Private Sub AddOnLoadEnd(aEvent As Sub(sender as HTMLElement, e As ProgressEvent))
      If Not assigned(_onLoadEnd) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onLoadEnd", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onLoadEnd(sender, CType(e, ProgressEvent)))
      End If
      AddHandler _onLoadEnd, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnLoadEndDelegate)
      RemoveHandler _onLoadEnd, aEvent
      If Not assigned(_onLoadEnd) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onLoadEnd")
      End If
    End Sub

    ' onLoadStart

    Public Delegate Sub OnLoadStartDelegate(sender as HTMLElement, e As ProgressEvent)

    Public Event onLoadStart As OnLoadStartDelegate ' Add AddOnLoadStart Remove RemoveOnLoadStart
    Private Event _onLoadStart As OnLoadStartDelegate

    Private Sub AddOnLoadStart(aEvent As Sub(sender as HTMLElement, e As ProgressEvent))
      If Not assigned(_onLoadStart) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onLoadStart", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onLoadStart(sender, CType(e, ProgressEvent)))
      End If
      AddHandler _onLoadStart, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnLoadStartDelegate)
      RemoveHandler _onLoadStart, aEvent
      If Not assigned(_onLoadStart) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onLoadStart")
      End If
    End Sub

    ' onLostPointerCapture

    Public Delegate Sub OnLostPointerCaptureDelegate(sender as HTMLElement, e As PointerEvent)

    Public Event onLostPointerCapture As OnLostPointerCaptureDelegate ' Add AddOnLostPointerCapture Remove RemoveOnLostPointerCapture
    Private Event _onLostPointerCapture As OnLostPointerCaptureDelegate

    Private Sub AddOnLostPointerCapture(aEvent As Sub(sender as HTMLElement, e As PointerEvent))
      If Not assigned(_onLostPointerCapture) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onLostPointerCapture", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onLostPointerCapture(sender, CType(e, PointerEvent)))
      End If
      AddHandler _onLostPointerCapture, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnLostPointerCaptureDelegate)
      RemoveHandler _onLostPointerCapture, aEvent
      If Not assigned(_onLostPointerCapture) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onLostPointerCapture")
      End If
    End Sub

    ' onMouseDown

    Public Delegate Sub OnMouseDownDelegate(sender as HTMLElement, e As MouseEvent)

    Public Event onMouseDown As OnMouseDownDelegate ' Add AddOnMouseDown Remove RemoveOnMouseDown
    Private Event _onMouseDown As OnMouseDownDelegate

    Private Sub AddOnMouseDown(aEvent As Sub(sender as HTMLElement, e As MouseEvent))
      If Not assigned(_onMouseDown) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onMouseDown", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onMouseDown(sender, CType(e, MouseEvent)))
      End If
      AddHandler _onMouseDown, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnMouseDownDelegate)
      RemoveHandler _onMouseDown, aEvent
      If Not assigned(_onMouseDown) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onMouseDown")
      End If
    End Sub

    ' onMouseEnter

    Public Delegate Sub OnMouseEnterDelegate(sender as HTMLElement, e As MouseEvent)

    Public Event onMouseEnter As OnMouseEnterDelegate ' Add AddOnMouseEnter Remove RemoveOnMouseEnter
    Private Event _onMouseEnter As OnMouseEnterDelegate

    Private Sub AddOnMouseEnter(aEvent As Sub(sender as HTMLElement, e As MouseEvent))
      If Not assigned(_onMouseEnter) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onMouseEnter", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onMouseEnter(sender, CType(e, MouseEvent)))
      End If
      AddHandler _onMouseEnter, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnMouseEnterDelegate)
      RemoveHandler _onMouseEnter, aEvent
      If Not assigned(_onMouseEnter) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onMouseEnter")
      End If
    End Sub

    ' onMouseLeave

    Public Delegate Sub OnMouseLeaveDelegate(sender as HTMLElement, e As MouseEvent)

    Public Event onMouseLeave As OnMouseLeaveDelegate ' Add AddOnMouseLeave Remove RemoveOnMouseLeave
    Private Event _onMouseLeave As OnMouseLeaveDelegate

    Private Sub AddOnMouseLeave(aEvent As Sub(sender as HTMLElement, e As MouseEvent))
      If Not assigned(_onMouseLeave) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onMouseLeave", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onMouseLeave(sender, CType(e, MouseEvent)))
      End If
      AddHandler _onMouseLeave, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnMouseLeaveDelegate)
      RemoveHandler _onMouseLeave, aEvent
      If Not assigned(_onMouseLeave) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onMouseLeave")
      End If
    End Sub

    ' onMouseMove

    Public Delegate Sub OnMouseMoveDelegate(sender as HTMLElement, e As MouseEvent)

    Public Event onMouseMove As OnMouseMoveDelegate ' Add AddOnMouseMove Remove RemoveOnMouseMove
    Private Event _onMouseMove As OnMouseMoveDelegate

    Private Sub AddOnMouseMove(aEvent As Sub(sender as HTMLElement, e As MouseEvent))
      If Not assigned(_onMouseMove) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onMouseMove", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onMouseMove(sender, CType(e, MouseEvent)))
      End If
      AddHandler _onMouseMove, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnMouseMoveDelegate)
      RemoveHandler _onMouseMove, aEvent
      If Not assigned(_onMouseMove) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onMouseMove")
      End If
    End Sub

    ' onMouseOut

    Public Delegate Sub OnMouseOutDelegate(sender as HTMLElement, e As MouseEvent)

    Public Event onMouseOut As OnMouseOutDelegate ' Add AddOnMouseOut Remove RemoveOnMouseOut
    Private Event _onMouseOut As OnMouseOutDelegate

    Private Sub AddOnMouseOut(aEvent As Sub(sender as HTMLElement, e As MouseEvent))
      If Not assigned(_onMouseOut) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onMouseOut", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onMouseOut(sender, CType(e, MouseEvent)))
      End If
      AddHandler _onMouseOut, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnMouseOutDelegate)
      RemoveHandler _onMouseOut, aEvent
      If Not assigned(_onMouseOut) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onMouseOut")
      End If
    End Sub

    ' onWheel

    Public Delegate Sub OnWheelDelegate(sender as HTMLElement, e As WheelEvent)

    Public Event onWheel As OnWheelDelegate ' Add AddOnWheel Remove RemoveOnWheel
    Private Event _onWheel As OnWheelDelegate

    Private Sub AddOnWheel(aEvent As Sub(sender as HTMLElement, e As WheelEvent))
      If Not assigned(_onWheel) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onWheel", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onWheel(sender, CType(e, WheelEvent)))
      End If
      AddHandler _onWheel, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnWheelDelegate)
      RemoveHandler _onWheel, aEvent
      If Not assigned(_onWheel) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onWheel")
      End If
    End Sub

    ' onPause

    Public Delegate Sub OnPauseDelegate(sender as HTMLElement, e As Dom.Event)

    Public Event onPause As OnPauseDelegate ' Add AddOnPause Remove RemoveOnPause
    Private Event _onPause As OnPauseDelegate

    Private Sub AddOnPause(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
      If Not assigned(_onPause) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onPause", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onPause(sender, CType(e, Dom.Event)))
      End If
      AddHandler _onPause, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnPauseDelegate)
      RemoveHandler _onPause, aEvent
      If Not assigned(_onPause) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onPause")
      End If
    End Sub

    ' onPlay

    Public Delegate Sub OnPlayDelegate(sender as HTMLElement, e As Dom.Event)

    Public Event onPlay As OnPlayDelegate ' Add AddOnPlay Remove RemoveOnPlay
    Private Event _onPlay As OnPlayDelegate

    Private Sub AddOnPlay(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
      If Not assigned(_onPlay) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onPlay", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onPlay(sender, CType(e, Dom.Event)))
      End If
      AddHandler _onPlay, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnPlayDelegate)
      RemoveHandler _onPlay, aEvent
      If Not assigned(_onPlay) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onPlay")
      End If
    End Sub

    ' onPlaying

    Public Delegate Sub OnPlayingDelegate(sender as HTMLElement, e As Dom.Event)

    Public Event onPlaying As OnPlayingDelegate ' Add AddOnPlaying Remove RemoveOnPlaying
    Private Event _onPlaying As OnPlayingDelegate

    Private Sub AddOnPlaying(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
      If Not assigned(_onPlaying) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onPlaying", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onPlaying(sender, CType(e, Dom.Event)))
      End If
      AddHandler _onPlaying, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnPlayingDelegate)
      RemoveHandler _onPlaying, aEvent
      If Not assigned(_onPlaying) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onPlaying")
      End If
    End Sub

    ' onPointerDown

    Public Delegate Sub OnPointerDownDelegate(sender as HTMLElement, e As PointerEvent)

    Public Event onPointerDown As OnPointerDownDelegate ' Add AddOnPointerDown Remove RemoveOnPointerDown
    Private Event _onPointerDown As OnPointerDownDelegate

    Private Sub AddOnPointerDown(aEvent As Sub(sender as HTMLElement, e As PointerEvent))
      If Not assigned(_onPointerDown) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onPointerDown", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onPointerDown(sender, CType(e, PointerEvent)))
      End If
      AddHandler _onPointerDown, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnPointerDownDelegate)
      RemoveHandler _onPointerDown, aEvent
      If Not assigned(_onPointerDown) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onPointerDown")
      End If
    End Sub

    ' onPointerMove

    Public Delegate Sub OnPointerMoveDelegate(sender as HTMLElement, e As PointerEvent)

    Public Event onPointerMove As OnPointerMoveDelegate ' Add AddOnPointerMove Remove RemoveOnPointerMove
    Private Event _onPointerMove As OnPointerMoveDelegate

    Private Sub AddOnPointerMove(aEvent As Sub(sender as HTMLElement, e As PointerEvent))
      If Not assigned(_onPointerMove) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onPointerMove", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onPointerMove(sender, CType(e, PointerEvent)))
      End If
      AddHandler _onPointerMove, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnPointerMoveDelegate)
      RemoveHandler _onPointerMove, aEvent
      If Not assigned(_onPointerMove) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onPointerMove")
      End If
    End Sub

    ' onPointerUp

    Public Delegate Sub OnPointerUpDelegate(sender as HTMLElement, e As PointerEvent)

    Public Event onPointerUp As OnPointerUpDelegate ' Add AddOnPointerUp Remove RemoveOnPointerUp
    Private Event _onPointerUp As OnPointerUpDelegate

    Private Sub AddOnPointerUp(aEvent As Sub(sender as HTMLElement, e As PointerEvent))
      If Not assigned(_onPointerUp) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onPointerUp", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onPointerUp(sender, CType(e, PointerEvent)))
      End If
      AddHandler _onPointerUp, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnPointerUpDelegate)
      RemoveHandler _onPointerUp, aEvent
      If Not assigned(_onPointerUp) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onPointerUp")
      End If
    End Sub

    ' onPointerCancel

    Public Delegate Sub OnPointerCancelDelegate(sender as HTMLElement, e As PointerEvent)

    Public Event onPointerCancel As OnPointerCancelDelegate ' Add AddOnPointerCancel Remove RemoveOnPointerCancel
    Private Event _onPointerCancel As OnPointerCancelDelegate

    Private Sub AddOnPointerCancel(aEvent As Sub(sender as HTMLElement, e As PointerEvent))
      If Not assigned(_onPointerCancel) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onPointerCancel", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onPointerCancel(sender, CType(e, PointerEvent)))
      End If
      AddHandler _onPointerCancel, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnPointerCancelDelegate)
      RemoveHandler _onPointerCancel, aEvent
      If Not assigned(_onPointerCancel) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onPointerCancel")
      End If
    End Sub

    ' onPointerOver

    Public Delegate Sub OnPointerOverDelegate(sender as HTMLElement, e As PointerEvent)

    Public Event onPointerOver As OnPointerOverDelegate ' Add AddOnPointerOver Remove RemoveOnPointerOver
    Private Event _onPointerOver As OnPointerOverDelegate

    Private Sub AddOnPointerOver(aEvent As Sub(sender as HTMLElement, e As PointerEvent))
      If Not assigned(_onPointerOver) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onPointerOver", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onPointerOver(sender, CType(e, PointerEvent)))
      End If
      AddHandler _onPointerOver, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnPointerOverDelegate)
      RemoveHandler _onPointerOver, aEvent
      If Not assigned(_onPointerOver) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onPointerOver")
      End If
    End Sub

    ' onPointerOut

    Public Delegate Sub OnPointerOutDelegate(sender as HTMLElement, e As PointerEvent)

    Public Event onPointerOut As OnPointerOutDelegate ' Add AddOnPointerOut Remove RemoveOnPointerOut
    Private Event _onPointerOut As OnPointerOutDelegate

    Private Sub AddOnPointerOut(aEvent As Sub(sender as HTMLElement, e As PointerEvent))
      If Not assigned(_onPointerOut) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onPointerOut", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onPointerOut(sender, CType(e, PointerEvent)))
      End If
      AddHandler _onPointerOut, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnPointerOutDelegate)
      RemoveHandler _onPointerOut, aEvent
      If Not assigned(_onPointerOut) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onPointerOut")
      End If
    End Sub

    ' onPointerEnter

    Public Delegate Sub OnPointerEnterDelegate(sender as HTMLElement, e As PointerEvent)

    Public Event onPointerEnter As OnPointerEnterDelegate ' Add AddOnPointerEnter Remove RemoveOnPointerEnter
    Private Event _onPointerEnter As OnPointerEnterDelegate

    Private Sub AddOnPointerEnter(aEvent As Sub(sender as HTMLElement, e As PointerEvent))
      If Not assigned(_onPointerEnter) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onPointerEnter", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onPointerEnter(sender, CType(e, PointerEvent)))
      End If
      AddHandler _onPointerEnter, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnPointerEnterDelegate)
      RemoveHandler _onPointerEnter, aEvent
      If Not assigned(_onPointerEnter) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onPointerEnter")
      End If
    End Sub

    ' onPointerLeave

    Public Delegate Sub OnPointerLeaveDelegate(sender as HTMLElement, e As PointerEvent)

    Public Event onPointerLeave As OnPointerLeaveDelegate ' Add AddOnPointerLeave Remove RemoveOnPointerLeave
    Private Event _onPointerLeave As OnPointerLeaveDelegate

    Private Sub AddOnPointerLeave(aEvent As Sub(sender as HTMLElement, e As PointerEvent))
      If Not assigned(_onPointerLeave) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onPointerLeave", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onPointerLeave(sender, CType(e, PointerEvent)))
      End If
      AddHandler _onPointerLeave, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnPointerLeaveDelegate)
      RemoveHandler _onPointerLeave, aEvent
      If Not assigned(_onPointerLeave) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onPointerLeave")
      End If
    End Sub

    ' onProgress

    Public Delegate Sub OnProgressDelegate(sender as HTMLElement, e As ProgressEvent)

    Public Event onProgress As OnProgressDelegate ' Add AddOnProgress Remove RemoveOnProgress
    Private Event _onProgress As OnProgressDelegate

    Private Sub AddOnProgress(aEvent As Sub(sender as HTMLElement, e As ProgressEvent))
      If Not assigned(_onProgress) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onProgress", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onProgress(sender, CType(e, ProgressEvent)))
      End If
      AddHandler _onProgress, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnProgressDelegate)
      RemoveHandler _onProgress, aEvent
      If Not assigned(_onProgress) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onProgress")
      End If
    End Sub

    ' onRateChange

    Public Delegate Sub OnRateChangeDelegate(sender as HTMLElement, e As Dom.Event)

    Public Event onRateChange As OnRateChangeDelegate ' Add AddOnRateChange Remove RemoveOnRateChange
    Private Event _onRateChange As OnRateChangeDelegate

    Private Sub AddOnRateChange(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
      If Not assigned(_onRateChange) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onRateChange", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onRateChange(sender, CType(e, Dom.Event)))
      End If
      AddHandler _onRateChange, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnRateChangeDelegate)
      RemoveHandler _onRateChange, aEvent
      If Not assigned(_onRateChange) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onRateChange")
      End If
    End Sub

    ' onReset

    Public Delegate Sub OnResetDelegate(sender as HTMLElement, e As Dom.Event)

    Public Event onReset As OnResetDelegate ' Add AddOnReset Remove RemoveOnReset
    Private Event _onReset As OnResetDelegate

    Private Sub AddOnReset(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
      If Not assigned(_onReset) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onReset", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onReset(sender, CType(e, Dom.Event)))
      End If
      AddHandler _onReset, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnResetDelegate)
      RemoveHandler _onReset, aEvent
      If Not assigned(_onReset) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onReset")
      End If
    End Sub

    ' onResize

    Public Delegate Sub OnResizeDelegate(sender as HTMLElement, e As UIEvent)

    Public Event onResize As OnResizeDelegate ' Add AddOnResize Remove RemoveOnResize
    Private Event _onResize As OnResizeDelegate

    Private Sub AddOnResize(aEvent As Sub(sender as HTMLElement, e As UIEvent))
      If Not assigned(_onResize) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onResize", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onResize(sender, CType(e, UIEvent)))
      End If
      AddHandler _onResize, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnResizeDelegate)
      RemoveHandler _onResize, aEvent
      If Not assigned(_onResize) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onResize")
      End If
    End Sub

    ' onScroll

    Public Delegate Sub OnScrollDelegate(sender as HTMLElement, e As Dom.Event)

    Public Event onScroll As OnScrollDelegate ' Add AddOnScroll Remove RemoveOnScroll
    Private Event _onScroll As OnScrollDelegate

    Private Sub AddOnScroll(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
      If Not assigned(_onScroll) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onScroll", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onScroll(sender, CType(e, Dom.Event)))
      End If
      AddHandler _onScroll, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnScrollDelegate)
      RemoveHandler _onScroll, aEvent
      If Not assigned(_onScroll) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onScroll")
      End If
    End Sub

    ' onSeeked

    Public Delegate Sub OnSeekedDelegate(sender as HTMLElement, e As Dom.Event)

    Public Event onSeeked As OnSeekedDelegate ' Add AddOnSeeked Remove RemoveOnSeeked
    Private Event _onSeeked As OnSeekedDelegate

    Private Sub AddOnSeeked(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
      If Not assigned(_onSeeked) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onSeeked", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onSeeked(sender, CType(e, Dom.Event)))
      End If
      AddHandler _onSeeked, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnSeekedDelegate)
      RemoveHandler _onSeeked, aEvent
      If Not assigned(_onSeeked) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onSeeked")
      End If
    End Sub

    ' onSeeking

    Public Delegate Sub OnSeekingDelegate(sender as HTMLElement, e As Dom.Event)

    Public Event onSeeking As OnSeekingDelegate ' Add AddOnSeeking Remove RemoveOnSeeking
    Private Event _onSeeking As OnSeekingDelegate

    Private Sub AddOnSeeking(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
      If Not assigned(_onSeeking) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onSeeking", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onSeeking(sender, CType(e, Dom.Event)))
      End If
      AddHandler _onSeeking, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnSeekingDelegate)
      RemoveHandler _onSeeking, aEvent
      If Not assigned(_onSeeking) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onSeeking")
      End If
    End Sub

    ' onSelect

    Public Delegate Sub OnSelectDelegate(sender as HTMLElement, e As UIEvent)

    Public Event onSelect As OnSelectDelegate ' Add AddOnSelect Remove RemoveOnSelect
    Private Event _onSelect As OnSelectDelegate

    Private Sub AddOnSelect(aEvent As Sub(sender as HTMLElement, e As UIEvent))
      If Not assigned(_onSelect) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onSelect", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onSelect(sender, CType(e, UIEvent)))
      End If
      AddHandler _onSelect, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnSelectDelegate)
      RemoveHandler _onSelect, aEvent
      If Not assigned(_onSelect) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onSelect")
      End If
    End Sub

    ' onSelectStart

    Public Delegate Sub OnSelectStartDelegate(sender as HTMLElement, e As Dom.Event)

    Public Event onSelectStart As OnSelectStartDelegate ' Add AddOnSelectStart Remove RemoveOnSelectStart
    Private Event _onSelectStart As OnSelectStartDelegate

    Private Sub AddOnSelectStart(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
      If Not assigned(_onSelectStart) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onSelectStart", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onSelectStart(sender, CType(e, Dom.Event)))
      End If
      AddHandler _onSelectStart, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnSelectStartDelegate)
      RemoveHandler _onSelectStart, aEvent
      If Not assigned(_onSelectStart) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onSelectStart")
      End If
    End Sub

    ' onSelectionChange

    Public Delegate Sub OnSelectionChangeDelegate(sender as HTMLElement, e As Dom.Event)

    Public Event onSelectionChange As OnSelectionChangeDelegate ' Add AddOnSelectionChange Remove RemoveOnSelectionChange
    Private Event _onSelectionChange As OnSelectionChangeDelegate

    Private Sub AddOnSelectionChange(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
      If Not assigned(_onSelectionChange) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onSelectionChange", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onSelectionChange(sender, CType(e, Dom.Event)))
      End If
      AddHandler _onSelectionChange, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnSelectionChangeDelegate)
      RemoveHandler _onSelectionChange, aEvent
      If Not assigned(_onSelectionChange) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onSelectionChange")
      End If
    End Sub

    ' onStalled

    Public Delegate Sub OnStalledDelegate(sender as HTMLElement, e As Dom.Event)

    Public Event onStalled As OnStalledDelegate ' Add AddOnStalled Remove RemoveOnStalled
    Private Event _onStalled As OnStalledDelegate

    Private Sub AddOnStalled(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
      If Not assigned(_onStalled) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onStalled", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onStalled(sender, CType(e, Dom.Event)))
      End If
      AddHandler _onStalled, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnStalledDelegate)
      RemoveHandler _onStalled, aEvent
      If Not assigned(_onStalled) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onStalled")
      End If
    End Sub

    ' onSubmit

    Public Delegate Sub OnSubmitDelegate(sender as HTMLElement, e As SubmitEvent)

    Public Event onSubmit As OnSubmitDelegate ' Add AddOnSubmit Remove RemoveOnSubmit
    Private Event _onSubmit As OnSubmitDelegate

    Private Sub AddOnSubmit(aEvent As Sub(sender as HTMLElement, e As SubmitEvent))
      If Not assigned(_onSubmit) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onSubmit", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onSubmit(sender, CType(e, SubmitEvent)))
      End If
      AddHandler _onSubmit, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnSubmitDelegate)
      RemoveHandler _onSubmit, aEvent
      If Not assigned(_onSubmit) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onSubmit")
      End If
    End Sub

    ' onSuspend

    Public Delegate Sub OnSuspendDelegate(sender as HTMLElement, e As Dom.Event)

    Public Event onSuspend As OnSuspendDelegate ' Add AddOnSuspend Remove RemoveOnSuspend
    Private Event _onSuspend As OnSuspendDelegate

    Private Sub AddOnSuspend(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
      If Not assigned(_onSuspend) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onSuspend", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onSuspend(sender, CType(e, Dom.Event)))
      End If
      AddHandler _onSuspend, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnSuspendDelegate)
      RemoveHandler _onSuspend, aEvent
      If Not assigned(_onSuspend) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onSuspend")
      End If
    End Sub

    ' onTimeUpdate

    Public Delegate Sub OnTimeUpdateDelegate(sender as HTMLElement, e As Dom.Event)

    Public Event onTimeUpdate As OnTimeUpdateDelegate ' Add AddOnTimeUpdate Remove RemoveOnTimeUpdate
    Private Event _onTimeUpdate As OnTimeUpdateDelegate

    Private Sub AddOnTimeUpdate(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
      If Not assigned(_onTimeUpdate) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onTimeUpdate", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onTimeUpdate(sender, CType(e, Dom.Event)))
      End If
      AddHandler _onTimeUpdate, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnTimeUpdateDelegate)
      RemoveHandler _onTimeUpdate, aEvent
      If Not assigned(_onTimeUpdate) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onTimeUpdate")
      End If
    End Sub

    ' onVolumeChange

    Public Delegate Sub OnVolumeChangeDelegate(sender as HTMLElement, e As Dom.Event)

    Public Event onVolumeChange As OnVolumeChangeDelegate ' Add AddOnVolumeChange Remove RemoveOnVolumeChange
    Private Event _onVolumeChange As OnVolumeChangeDelegate

    Private Sub AddOnVolumeChange(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
      If Not assigned(_onVolumeChange) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onVolumeChange", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onVolumeChange(sender, CType(e, Dom.Event)))
      End If
      AddHandler _onVolumeChange, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnVolumeChangeDelegate)
      RemoveHandler _onVolumeChange, aEvent
      If Not assigned(_onVolumeChange) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onVolumeChange")
      End If
    End Sub

    ' onWaiting

    Public Delegate Sub OnWaitingDelegate(sender as HTMLElement, e As Dom.Event)

    Public Event onWaiting As OnWaitingDelegate ' Add AddOnWaiting Remove RemoveOnWaiting
    Private Event _onWaiting As OnWaitingDelegate

    Private Sub AddOnWaiting(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
      If Not assigned(_onWaiting) Then
        RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onWaiting", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onWaiting(sender, CType(e, Dom.Event)))
      End If
      AddHandler _onWaiting, aEvent
    End Sub

    Private Sub CantRemove(aEvent As OnWaitingDelegate)
      RemoveHandler _onWaiting, aEvent
      If Not assigned(_onWaiting) then
        RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onWaiting")
      End If
    End Sub

  End Class

  Public class HTMLAnchorElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLAnchorElement

    Public Shadows ReadOnly Property HtmlElement As HTMLAnchorElement Implements Public HTMLAnchorElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLAnchorElement)
      End Get
    End Property
  End Class

  Public class HTMLDListElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLDListElement

    Public Shadows ReadOnly Property HtmlElement As HTMLDListElement Implements Public HTMLDListElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLDListElement)
      End Get
    End Property
  End Class

  Public class HTMLHeadingElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLHeadingElement

    Public Shadows ReadOnly Property HtmlElement As HTMLHeadingElement Implements Public HTMLHeadingElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLHeadingElement)
      End Get
    End Property
  End Class

  Public class HTMLImageElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLImageElement

    Public Shadows ReadOnly Property HtmlElement As HTMLImageElement Implements Public HTMLImageElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLImageElement)
      End Get
    End Property
  End Class

  Public class HTMLAreaElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLAreaElement

    Public Shadows ReadOnly Property HtmlElement As HTMLAreaElement Implements Public HTMLAreaElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLAreaElement)
      End Get
    End Property
  End Class

  Public class HTMLAudioElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLAudioElement

    Public Shadows ReadOnly Property HtmlElement As HTMLAudioElement Implements Public HTMLAudioElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLAudioElement)
      End Get
    End Property
  End Class

  Public class HTMLBRElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLBRElement

    Public Shadows ReadOnly Property HtmlElement As HTMLBRElement Implements Public HTMLBRElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLBRElement)
      End Get
    End Property
  End Class

  Public class HTMLBodyElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLBodyElement

    Public Shadows ReadOnly Property HtmlElement As HTMLBodyElement Implements Public HTMLBodyElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLBodyElement)
      End Get
    End Property
  End Class

  Public class HTMLButtonElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLButtonElement
    Implements HTMLButtonElement

    Public Shadows ReadOnly Property HtmlElement As HTMLButtonElement Implements Public HTMLButtonElement
      Implements HTMLButtonElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLButtonElement)
      End Get
    End Property
  End Class

  Public class HTMLCanvasElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLCanvasElement

    Public Shadows ReadOnly Property HtmlElement As HTMLCanvasElement Implements Public HTMLCanvasElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLCanvasElement)
      End Get
    End Property
  End Class

  Public class HTMLDataElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLDataElement

    Public Shadows ReadOnly Property HtmlElement As HTMLDataElement Implements Public HTMLDataElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLDataElement)
      End Get
    End Property
  End Class

  Public class HTMLDataListElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLDataListElement

    Public Shadows ReadOnly Property HtmlElement As HTMLDataListElement Implements Public HTMLDataListElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLDataListElement)
      End Get
    End Property
  End Class

  Public class HTMLDetailsElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLDetailsElement

    Public Shadows ReadOnly Property HtmlElement As HTMLDetailsElement Implements Public HTMLDetailsElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLDetailsElement)
      End Get
    End Property
  End Class

  Public class HTMLDivElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLDivElement

    Public Shadows ReadOnly Property HtmlElement As HTMLDivElement Implements Public HTMLDivElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLDivElement)
      End Get
    End Property
  End Class

  Public class HTMLEmbedElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLEmbedElement

    Public Shadows ReadOnly Property HtmlElement As HTMLEmbedElement Implements Public HTMLEmbedElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLEmbedElement)
      End Get
    End Property
  End Class

  Public class HTMLFieldSetElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLFieldSetElement

    Public Shadows ReadOnly Property HtmlElement As HTMLFieldSetElement Implements Public HTMLFieldSetElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLFieldSetElement)
      End Get
    End Property
  End Class

  Public class HTMLFormElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLFormElement

    Public Shadows ReadOnly Property HtmlElement As HTMLFormElement Implements Public HTMLFormElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLFormElement)
      End Get
    End Property
  End Class

  Public class HTMLHRElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLHRElement

    Public Shadows ReadOnly Property HtmlElement As HTMLHRElement Implements Public HTMLHRElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLHRElement)
      End Get
    End Property
  End Class

  Public class HTMLIFrameElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLIFrameElement

    Public Shadows ReadOnly Property HtmlElement As HTMLIFrameElement Implements Public HTMLIFrameElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLIFrameElement)
      End Get
    End Property
  End Class

  Public class HTMLInputElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLInputElement

    Public Shadows ReadOnly Property HtmlElement As HTMLInputElement Implements Public HTMLInputElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLInputElement)
      End Get
    End Property
  End Class

  Public class HTMLLIElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLLIElement

    Public Shadows ReadOnly Property HtmlElement As HTMLLIElement Implements Public HTMLLIElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLLIElement)
      End Get
    End Property
  End Class

  Public class HTMLLabelElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLLabelElement

    Public Shadows ReadOnly Property HtmlElement As HTMLLabelElement Implements Public HTMLLabelElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLLabelElement)
      End Get
    End Property
  End Class

  Public class HTMLLegendElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLLegendElement

    Public Shadows ReadOnly Property HtmlElement As HTMLLegendElement Implements Public HTMLLegendElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLLegendElement)
      End Get
    End Property
  End Class

  Public class HTMLLinkElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLLinkElement

    Public Shadows ReadOnly Property HtmlElement As HTMLLinkElement Implements Public HTMLLinkElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLLinkElement)
      End Get
    End Property
  End Class

  Public class HTMLMapElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLMapElement

    Public Shadows ReadOnly Property HtmlElement As HTMLMapElement Implements Public HTMLMapElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLMapElement)
      End Get
    End Property
  End Class

  Public class HTMLMediaElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLMediaElement

    Public Shadows ReadOnly Property HtmlElement As HTMLMediaElement Implements Public HTMLMediaElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLMediaElement)
      End Get
    End Property
  End Class

  Public class HTMLMetaElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLMetaElement

    Public Shadows ReadOnly Property HtmlElement As HTMLMetaElement Implements Public HTMLMetaElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLMetaElement)
      End Get
    End Property
  End Class

  Public class HTMLMeterElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLMeterElement

    Public Shadows ReadOnly Property HtmlElement As HTMLMeterElement Implements Public HTMLMeterElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLMeterElement)
      End Get
    End Property
  End Class

  Public class HTMLModElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLModElement

    Public Shadows ReadOnly Property HtmlElement As HTMLModElement Implements Public HTMLModElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLModElement)
      End Get
    End Property
  End Class

  Public class HTMLOListElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLOListElement

    Public Shadows ReadOnly Property HtmlElement As HTMLOListElement Implements Public HTMLOListElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLOListElement)
      End Get
    End Property
  End Class

  Public class HTMLObjectElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLObjectElement

    Public Shadows ReadOnly Property HtmlElement As HTMLObjectElement Implements Public HTMLObjectElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLObjectElement)
      End Get
    End Property
  End Class

  Public class HTMLOptGroupElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLOptGroupElement

    Public Shadows ReadOnly Property HtmlElement As HTMLOptGroupElement Implements Public HTMLOptGroupElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLOptGroupElement)
      End Get
    End Property
  End Class

  Public class HTMLOptionElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLOptionElement

    Public Shadows ReadOnly Property HtmlElement As HTMLOptionElement Implements Public HTMLOptionElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLOptionElement)
      End Get
    End Property
  End Class

  Public class HTMLOutputElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLOutputElement

    Public Shadows ReadOnly Property HtmlElement As HTMLOutputElement Implements Public HTMLOutputElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLOutputElement)
      End Get
    End Property
  End Class

  Public class HTMLParagraphElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLParagraphElement

    Public Shadows ReadOnly Property HtmlElement As HTMLParagraphElement Implements Public HTMLParagraphElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLParagraphElement)
      End Get
    End Property
  End Class

  Public class HTMLParamElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLParamElement

    Public Shadows ReadOnly Property HtmlElement As HTMLParamElement Implements Public HTMLParamElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLParamElement)
      End Get
    End Property
  End Class

  Public class HTMLPreElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLPreElement

    Public Shadows ReadOnly Property HtmlElement As HTMLPreElement Implements Public HTMLPreElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLPreElement)
      End Get
    End Property
  End Class

  Public class HTMLProgressElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLProgressElement

    Public Shadows ReadOnly Property HtmlElement As HTMLProgressElement Implements Public HTMLProgressElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLProgressElement)
      End Get
    End Property
  End Class

  Public class HTMLQuoteElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLQuoteElement

    Public Shadows ReadOnly Property HtmlElement As HTMLQuoteElement Implements Public HTMLQuoteElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLQuoteElement)
      End Get
    End Property
  End Class

  Public class HTMLScriptElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLScriptElement

    Public Shadows ReadOnly Property HtmlElement As HTMLScriptElement Implements Public HTMLScriptElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLScriptElement)
      End Get
    End Property
  End Class

  Public class HTMLSelectElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLSelectElement

    Public Shadows ReadOnly Property HtmlElement As HTMLSelectElement Implements Public HTMLSelectElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLSelectElement)
      End Get
    End Property
  End Class

  Public class HTMLSlotElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLSlotElement

    Public Shadows ReadOnly Property HtmlElement As HTMLSlotElement Implements Public HTMLSlotElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLSlotElement)
      End Get
    End Property
  End Class

  Public class HTMLSourceElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLSourceElement

    Public Shadows ReadOnly Property HtmlElement As HTMLSourceElement Implements Public HTMLSourceElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLSourceElement)
      End Get
    End Property
  End Class

  Public class HTMLSpanElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLSpanElement

    Public Shadows ReadOnly Property HtmlElement As HTMLSpanElement Implements Public HTMLSpanElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLSpanElement)
      End Get
    End Property
  End Class

  Public class HTMLStyleElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLStyleElement

    Public Shadows ReadOnly Property HtmlElement As HTMLStyleElement Implements Public HTMLStyleElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLStyleElement)
      End Get
    End Property
  End Class

  Public class HTMLTableCaptionElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLTableCaptionElement

    Public Shadows ReadOnly Property HtmlElement As HTMLTableCaptionElement Implements Public HTMLTableCaptionElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLTableCaptionElement)
      End Get
    End Property
  End Class

  Public class HTMLTableCellElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLTableCellElement

    Public Shadows ReadOnly Property HtmlElement As HTMLTableCellElement Implements Public HTMLTableCellElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLTableCellElement)
      End Get
    End Property
  End Class

  Public class HTMLTableColElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLTableColElement

    Public Shadows ReadOnly Property HtmlElement As HTMLTableColElement Implements Public HTMLTableColElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLTableColElement)
      End Get
    End Property
  End Class

  Public class HTMLTableElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLTableElement

    Public Shadows ReadOnly Property HtmlElement As HTMLTableElement Implements Public HTMLTableElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLTableElement)
      End Get
    End Property
  End Class

  Public class HTMLTableRowElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLTableRowElement

    Public Shadows ReadOnly Property HtmlElement As HTMLTableRowElement Implements Public HTMLTableRowElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLTableRowElement)
      End Get
    End Property
  End Class

  Public class HTMLTableSectionElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLTableSectionElement

    Public Shadows ReadOnly Property HtmlElement As HTMLTableSectionElement Implements Public HTMLTableSectionElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLTableSectionElement)
      End Get
    End Property
  End Class

  Public class HTMLTemplateElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLTemplateElement

    Public Shadows ReadOnly Property HtmlElement As HTMLTemplateElement Implements Public HTMLTemplateElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLTemplateElement)
      End Get
    End Property
  End Class

  Public class HTMLTextAreaElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLTextAreaElement

    Public Shadows ReadOnly Property HtmlElement As HTMLTextAreaElement Implements Public HTMLTextAreaElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLTextAreaElement)
      End Get
    End Property
  End Class

  Public class HTMLTimeElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLElement

    Public Shadows ReadOnly Property HtmlTimeElement As HTMLElement Implements Public HTMLElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLTimeElement)
      End Get
    End Property
  End Class

  Public class HTMLTitleElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLTitleElement

    Public Shadows ReadOnly Property HtmlElement As HTMLTitleElement Implements Public HTMLTitleElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLTitleElement)
      End Get
    End Property
  End Class

  Public class HTMLTrackElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLTrackElement

    Public Shadows ReadOnly Property HtmlElement As HTMLTrackElement Implements Public HTMLTrackElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLTrackElement)
      End Get
    End Property
  End Class

  Public class HTMLVideoElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLVideoElement

    Public Shadows ReadOnly Property HtmlElement As HTMLVideoElement Implements Public HTMLVideoElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLVideoElement)
      End Get
    End Property
  End Class

End Namespace