Namespace Global.RemObjects.Elements.WebAssembly

  //this code has no meaning in any other language than Mercury, because it works on the Handles clauses (which are Mercury only) that are used in the code.

  Public class HTMLElement_EventProxy
    Implements HtmlElement

    Public ReadOnly Property HtmlElement As HTMLElement Implements Public HtmlElement

    Public Sub New(element As Element)
      _HtmlElement = DirectCast(element, HTMLElement)
    End Sub

    Public Sub New(element As Dynamic)
      _HtmlElement = DirectCast(element, HTMLElement)
    End Sub

    //performance: only wire the Html events that are handled in code, is called by the IntializeComponents code that is generated by the Html code generator

    ' onFullScreenChange

    Public Delegate Sub OnFullScreenChangeDelegate(sender as HTMLElement, e As Dom.Event)

    Public Custom Event onFullScreenChange As OnFullScreenChangeDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
        If Not assigned(_onFullScreenChange) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onFullScreenChange", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onFullScreenChange(sender, CType(e, Dom.Event)))
        End If
        AddHandler _onFullScreenChange, Value
      End AddHandler
      RemoveHandler(aEvent As OnFullScreenChangeDelegate)
        RemoveHandler _onFullScreenChange, Value
        If Not assigned(_onFullScreenChange) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onFullScreenChange")
        End If
      End RemoveHandler
    End Event

    Private Event _onFullScreenChange As OnFullScreenChangeDelegate

    ' onFullScreenError

    Public Delegate Sub OnFullScreenErrorDelegate(sender as HTMLElement, e As Dom.Event)

    Public Custom Event onFullScreenError As OnFullScreenErrorDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
        If Not assigned(_onFullScreenError) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onFullScreenError", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onFullScreenError(sender, CType(e, Dom.Event)))
        End If
        AddHandler _onFullScreenError, Value
      End AddHandler
      RemoveHandler(aEvent As OnFullScreenErrorDelegate)
        RemoveHandler _onFullScreenError, Value
        If Not assigned(_onFullScreenError) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onFullScreenError")
        End If
      End RemoveHandler
    End Event

    Private Event _onFullScreenError As OnFullScreenErrorDelegate

    ' onAbort

    Public Delegate Sub OnAbortDelegate(sender as HTMLElement, e As Dom.Event)

    Public Custom Event onAbort As OnAbortDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
        If Not assigned(_onAbort) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onAbort", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onAbort(sender, CType(e, Dom.Event)))
        End If
        AddHandler _onAbort, Value
      End AddHandler
      RemoveHandler(aEvent As OnAbortDelegate)
        RemoveHandler _onAbort, Value
        If Not assigned(_onAbort) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onAbort")
        End If
      End RemoveHandler
    End Event

    Private Event _onAbort As OnAbortDelegate

    ' onBlur

    Public Delegate Sub OnBlurDelegate(sender as HTMLElement, e As Dom.Event)

    Public Custom Event onBlur As OnBlurDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
        If Not assigned(_onBlur) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onBlur", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onBlur(sender, CType(e, Dom.Event)))
        End If
        AddHandler _onBlur, Value
      End AddHandler
      RemoveHandler(aEvent As OnBlurDelegate)
        RemoveHandler _onBlur, Value
        If Not assigned(_onBlur) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onBlur")
        End If
      End RemoveHandler
    End Event

    Private Event _onBlur As OnBlurDelegate

    ' onError

    Public Delegate Sub OnErrorDelegate(sender as HTMLElement, e As UIEvent)

    Public Custom Event onError As OnErrorDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As UIEvent))
        If Not assigned(_onError) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onError", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onError(sender, CType(e, UIEvent)))
        End If
        AddHandler _onError, Value
      End AddHandler
      RemoveHandler(aEvent As OnErrorDelegate)
        RemoveHandler _onError, Value
        If Not assigned(_onError) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onError")
        End If
      End RemoveHandler
    End Event

    Private Event _onError As OnErrorDelegate

    ' onFocus

    Public Delegate Sub OnFocusDelegate(sender as HTMLElement, e As FocusEvent)

    Public Custom Event onFocus As OnFocusDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As FocusEvent))
        If Not assigned(_onFocus) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onFocus", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onFocus(sender, CType(e, FocusEvent)))
        End If
        AddHandler _onFocus, Value
      End AddHandler
      RemoveHandler(aEvent As OnFocusDelegate)
        RemoveHandler _onFocus, Value
        If Not assigned(_onFocus) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onFocus")
        End If
      End RemoveHandler
    End Event

    Private Event _onFocus As OnFocusDelegate

    ' onCancel

    Public Delegate Sub OnCancelDelegate(sender as HTMLElement, e As Dom.Event)

    Public Custom Event onCancel As OnCancelDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
        If Not assigned(_onCancel) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onCancel", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onCancel(sender, CType(e, Dom.Event)))
        End If
        AddHandler _onCancel, Value
      End AddHandler
      RemoveHandler(aEvent As OnCancelDelegate)
        RemoveHandler _onCancel, Value
        If Not assigned(_onCancel) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onCancel")
        End If
      End RemoveHandler
    End Event

    Private Event _onCancel As OnCancelDelegate

    ' onCanplay

    Public Delegate Sub OnCanplayDelegate(sender as HTMLElement, e As Dom.Event)

    Public Custom Event onCanplay As OnCanplayDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
        If Not assigned(_onCanplay) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onCanplay", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onCanplay(sender, CType(e, Dom.Event)))
        End If
        AddHandler _onCanplay, Value
      End AddHandler
      RemoveHandler(aEvent As OnCanplayDelegate)
        RemoveHandler _onCanplay, Value
        If Not assigned(_onCanplay) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onCanplay")
        End If
      End RemoveHandler
    End Event

    Private Event _onCanplay As OnCanplayDelegate

    ' onCanplayThrough

    Public Delegate Sub OnCanplayThroughDelegate(sender as HTMLElement, e As Dom.Event)

    Public Custom Event onCanplayThrough As OnCanplayThroughDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
        If Not assigned(_onCanplayThrough) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onCanplayThrough", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onCanplayThrough(sender, CType(e, Dom.Event)))
        End If
        AddHandler _onCanplayThrough, Value
      End AddHandler
      RemoveHandler(aEvent As OnCanplayThroughDelegate)
        RemoveHandler _onCanplayThrough, Value
        If Not assigned(_onCanplayThrough) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onCanplayThrough")
        End If
      End RemoveHandler
    End Event

    Private Event _onCanplayThrough As OnCanplayThroughDelegate

    ' onChange

    Public Delegate Sub OnChangeDelegate(sender as HTMLElement, e As Dom.Event)

    Public Custom Event onChange As OnChangeDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
        If Not assigned(_onChange) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onChange", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onChange(sender, CType(e, Dom.Event)))
        End If
        AddHandler _onChange, Value
      End AddHandler
      RemoveHandler(aEvent As OnChangeDelegate)
        RemoveHandler _onChange, Value
        If Not assigned(_onChange) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onChange")
        End If
      End RemoveHandler
    End Event

    Private Event _onChange As OnChangeDelegate

    ' onClick

    Public Delegate Sub OnClickDelegate(sender as HTMLElement, e As MouseEvent)

    Public Custom Event onClick As OnClickDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As MouseEvent))
        If Not assigned(_onClick) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onClick", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onClick(sender, CType(e, MouseEvent)))
        End If
        AddHandler _onClick, Value
      End AddHandler
      RemoveHandler(aEvent As OnClickDelegate)
        RemoveHandler _onClick, Value
        If Not assigned(_onClick) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onClick")
        End If
      End RemoveHandler
    End Event

    Private Event _onClick As OnClickDelegate

    ' onClose

    Public Delegate Sub OnCloseDelegate(sender as HTMLElement, e As FocusEvent)

    Public Custom Event onClose As OnCloseDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As FocusEvent))
        If Not assigned(_onClose) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onClose", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onClose(sender, CType(e, FocusEvent)))
        End If
        AddHandler _onClose, Value
      End AddHandler
      RemoveHandler(aEvent As OnCloseDelegate)
        RemoveHandler _onClose, Value
        If Not assigned(_onClose) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onClose")
        End If
      End RemoveHandler
    End Event

    Private Event _onClose As OnCloseDelegate

    ' onContextMenu

    Public Delegate Sub OnContextMenuDelegate(sender as HTMLElement, e As MouseEvent)

    Public Custom Event onContextMenu As OnContextMenuDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As MouseEvent))
        If Not assigned(_onContextMenu) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onContextMenu", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onContextMenu(sender, CType(e, MouseEvent)))
        End If
        AddHandler _onContextMenu, Value
      End AddHandler
      RemoveHandler(aEvent As OnContextMenuDelegate)
        RemoveHandler _onContextMenu, Value
        If Not assigned(_onContextMenu) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onContextMenu")
        End If
      End RemoveHandler
    End Event

    Private Event _onContextMenu As OnContextMenuDelegate

    ' onCueChange

    Public Delegate Sub OnCueChangeDelegate(sender as HTMLElement, e As FocusEvent)

    Public Custom Event onCueChange As OnCueChangeDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As FocusEvent))
        If Not assigned(_onCueChange) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onCueChange", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onCueChange(sender, CType(e, FocusEvent)))
        End If
        AddHandler _onCueChange, Value
      End AddHandler
      RemoveHandler(aEvent As OnCueChangeDelegate)
        RemoveHandler _onCueChange, Value
        If Not assigned(_onCueChange) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onCueChange")
        End If
      End RemoveHandler
    End Event

    Private Event _onCueChange As OnCueChangeDelegate

    ' onDblClick

    Public Delegate Sub OnDblClickDelegate(sender as HTMLElement, e As MouseEvent)

    Public Custom Event onDblClick As OnDblClickDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As MouseEvent))
        If Not assigned(_onDblClick) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onDblClick", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onDblClick(sender, CType(e, MouseEvent)))
        End If
        AddHandler _onDblClick, Value
      End AddHandler
      RemoveHandler(aEvent As OnDblClickDelegate)
        RemoveHandler _onDblClick, Value
        If Not assigned(_onDblClick) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onDblClick")
        End If
      End RemoveHandler
    End Event

    Private Event _onDblClick As OnDblClickDelegate

    ' onDrag

    Public Delegate Sub OnDragDelegate(sender as HTMLElement, e As DragEvent)

    Public Custom Event onDrag As OnDragDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As DragEvent))
        If Not assigned(_onDrag) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onDrag", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onDrag(sender, CType(e, DragEvent)))
        End If
        AddHandler _onDrag, Value
      End AddHandler
      RemoveHandler(aEvent As OnDragDelegate)
        RemoveHandler _onDrag, Value
        If Not assigned(_onDrag) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onDrag")
        End If
      End RemoveHandler
    End Event

    Private Event _onDrag As OnDragDelegate

    ' onDragEnd

    Public Delegate Sub OnDragEndDelegate(sender as HTMLElement, e As DragEvent)

    Public Custom Event onDragEnd As OnDragEndDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As DragEvent))
        If Not assigned(_onDragEnd) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onDragEnd", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onDragEnd(sender, CType(e, DragEvent)))
        End If
        AddHandler _onDragEnd, Value
      End AddHandler
      RemoveHandler(aEvent As OnDragEndDelegate)
        RemoveHandler _onDragEnd, Value
        If Not assigned(_onDragEnd) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onDragEnd")
        End If
      End RemoveHandler
    End Event

    Private Event _onDragEnd As OnDragEndDelegate

    ' onDragEnter

    Public Delegate Sub OnDragEnterDelegate(sender as HTMLElement, e As DragEvent)

    Public Custom Event onDragEnter As OnDragEnterDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As DragEvent))
        If Not assigned(_onDragEnter) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onDragEnter", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onDragEnter(sender, CType(e, DragEvent)))
        End If
        AddHandler _onDragEnter, Value
      End AddHandler
      RemoveHandler(aEvent As OnDragEnterDelegate)
        RemoveHandler _onDragEnter, Value
        If Not assigned(_onDragEnter) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onDragEnter")
        End If
      End RemoveHandler
    End Event

    Private Event _onDragEnter As OnDragEnterDelegate

    ' onDragExit

    Public Delegate Sub OnDragExitDelegate(sender as HTMLElement, e As DragEvent)

    Public Custom Event onDragExit As OnDragExitDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As DragEvent))
        If Not assigned(_onDragExit) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onDragExit", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onDragExit(sender, CType(e, DragEvent)))
        End If
        AddHandler _onDragExit, Value
      End AddHandler
      RemoveHandler(aEvent As OnDragExitDelegate)
        RemoveHandler _onDragExit, Value
        If Not assigned(_onDragExit) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onDragExit")
        End If
      End RemoveHandler
    End Event

    Private Event _onDragExit As OnDragExitDelegate

    ' onDragLeave

    Public Delegate Sub OnDragLeaveDelegate(sender as HTMLElement, e As DragEvent)

    Public Custom Event onDragLeave As OnDragLeaveDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As DragEvent))
        If Not assigned(_onDragLeave) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onDragLeave", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onDragLeave(sender, CType(e, DragEvent)))
        End If
        AddHandler _onDragLeave, Value
      End AddHandler
      RemoveHandler(aEvent As OnDragLeaveDelegate)
        RemoveHandler _onDragLeave, Value
        If Not assigned(_onDragLeave) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onDragLeave")
        End If
      End RemoveHandler
    End Event

    Private Event _onDragLeave As OnDragLeaveDelegate

    ' onDragOver

    Public Delegate Sub OnDragOverDelegate(sender as HTMLElement, e As DragEvent)

    Public Custom Event onDragOver As OnDragOverDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As DragEvent))
        If Not assigned(_onDragOver) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onDragOver", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onDragOver(sender, CType(e, DragEvent)))
        End If
        AddHandler _onDragOver, Value
      End AddHandler
      RemoveHandler(aEvent As OnDragOverDelegate)
        RemoveHandler _onDragOver, Value
        If Not assigned(_onDragOver) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onDragOver")
        End If
      End RemoveHandler
    End Event

    Private Event _onDragOver As OnDragOverDelegate

    ' onDragStart

    Public Delegate Sub OnDragStartDelegate(sender as HTMLElement, e As DragEvent)

    Public Custom Event onDragStart As OnDragStartDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As DragEvent))
        If Not assigned(_onDragStart) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onDragStart", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onDragStart(sender, CType(e, DragEvent)))
        End If
        AddHandler _onDragStart, Value
      End AddHandler
      RemoveHandler(aEvent As OnDragStartDelegate)
        RemoveHandler _onDragStart, Value
        If Not assigned(_onDragStart) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onDragStart")
        End If
      End RemoveHandler
    End Event

    Private Event _onDragStart As OnDragStartDelegate

    ' onDrop

    Public Delegate Sub OnDropDelegate(sender as HTMLElement, e As DragEvent)

    Public Custom Event onDrop As OnDropDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As DragEvent))
        If Not assigned(_onDrop) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onDrop", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onDrop(sender, CType(e, DragEvent)))
        End If
        AddHandler _onDrop, Value
      End AddHandler
      RemoveHandler(aEvent As OnDropDelegate)
        RemoveHandler _onDrop, Value
        If Not assigned(_onDrop) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onDrop")
        End If
      End RemoveHandler
    End Event

    Private Event _onDrop As OnDropDelegate

    ' onDurationChange

    Public Delegate Sub OnDurationChangeDelegate(sender as HTMLElement, e As Dom.Event)

    Public Custom Event onDurationChange As OnDurationChangeDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
        If Not assigned(_onDurationChange) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onDurationChange", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onDurationChange(sender, CType(e, Dom.Event)))
        End If
        AddHandler _onDurationChange, Value
      End AddHandler
      RemoveHandler(aEvent As OnDurationChangeDelegate)
        RemoveHandler _onDurationChange, Value
        If Not assigned(_onDurationChange) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onDurationChange")
        End If
      End RemoveHandler
    End Event

    Private Event _onDurationChange As OnDurationChangeDelegate

    ' onEmptied

    Public Delegate Sub OnEmptiedDelegate(sender as HTMLElement, e As Dom.Event)

    Public Custom Event onEmptied As OnEmptiedDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
        If Not assigned(_onEmptied) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onEmptied", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onEmptied(sender, CType(e, Dom.Event)))
        End If
        AddHandler _onEmptied, Value
      End AddHandler
      RemoveHandler(aEvent As OnEmptiedDelegate)
        RemoveHandler _onEmptied, Value
        If Not assigned(_onEmptied) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onEmptied")
        End If
      End RemoveHandler
    End Event

    Private Event _onEmptied As OnEmptiedDelegate

    ' onEnded

    Public Delegate Sub OnEndedDelegate(sender as HTMLElement, e As Dom.Event)

    Public Custom Event onEnded As OnEndedDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
        If Not assigned(_onEnded) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onEnded", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onEnded(sender, CType(e, Dom.Event)))
        End If
        AddHandler _onEnded, Value
      End AddHandler
      RemoveHandler(aEvent As OnEndedDelegate)
        RemoveHandler _onEnded, Value
        If Not assigned(_onEnded) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onEnded")
        End If
      End RemoveHandler
    End Event

    Private Event _onEnded As OnEndedDelegate

    ' onFormData

    Public Delegate Sub OnFormDataDelegate(sender as HTMLElement, e As Dom.Event)

    Public Custom Event onFormData As OnFormDataDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
        If Not assigned(_onFormData) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onFormData", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onFormData(sender, CType(e, Dom.Event)))
        End If
        AddHandler _onFormData, Value
      End AddHandler
      RemoveHandler(aEvent As OnFormDataDelegate)
        RemoveHandler _onFormData, Value
        If Not assigned(_onFormData) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onFormData")
        End If
      End RemoveHandler
    End Event

    Private Event _onFormData As OnFormDataDelegate

    ' onGotPointerCapture

    Public Delegate Sub OnGotPointerCaptureDelegate(sender as HTMLElement, e As PointerEvent)

    Public Custom Event onGotPointerCapture As OnGotPointerCaptureDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As PointerEvent))
        If Not assigned(_onGotPointerCapture) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onGotPointerCapture", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onGotPointerCapture(sender, CType(e, PointerEvent)))
        End If
        AddHandler _onGotPointerCapture, Value
      End AddHandler
      RemoveHandler(aEvent As OnGotPointerCaptureDelegate)
        RemoveHandler _onGotPointerCapture, Value
        If Not assigned(_onGotPointerCapture) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onGotPointerCapture")
        End If
      End RemoveHandler
    End Event

    Private Event _onGotPointerCapture As OnGotPointerCaptureDelegate

    ' onInput

    Public Delegate Sub OnInputDelegate(sender as HTMLElement, e As Dom.Event)

    Public Custom Event onInput As OnInputDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
        If Not assigned(_onInput) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onInput", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onInput(sender, CType(e, Dom.Event)))
        End If
        AddHandler _onInput, Value
      End AddHandler
      RemoveHandler(aEvent As OnInputDelegate)
        RemoveHandler _onInput, Value
        If Not assigned(_onInput) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onInput")
        End If
      End RemoveHandler
    End Event

    Private Event _onInput As OnInputDelegate

    ' onInvalid

    Public Delegate Sub OnInvalidDelegate(sender as HTMLElement, e As Dom.Event)

    Public Custom Event onInvalid As OnInvalidDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
        If Not assigned(_onInvalid) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onInvalid", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onInvalid(sender, CType(e, Dom.Event)))
        End If
        AddHandler _onInvalid, Value
      End AddHandler
      RemoveHandler(aEvent As OnInvalidDelegate)
        RemoveHandler _onInvalid, Value
        If Not assigned(_onInvalid) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onInvalid")
        End If
      End RemoveHandler
    End Event

    Private Event _onInvalid As OnInvalidDelegate

    ' onKeyDown

    Public Delegate Sub OnKeyDownDelegate(sender as HTMLElement, e As KeyboardEvent)

    Public Custom Event onKeyDown As OnKeyDownDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As KeyboardEvent))
        If Not assigned(_onKeyDown) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onKeyDown", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onKeyDown(sender, CType(e, KeyboardEvent)))
        End If
        AddHandler _onKeyDown, Value
      End AddHandler
      RemoveHandler(aEvent As OnKeyDownDelegate)
        RemoveHandler _onKeyDown, Value
        If Not assigned(_onKeyDown) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onKeyDown")
        End If
      End RemoveHandler
    End Event

    Private Event _onKeyDown As OnKeyDownDelegate

    ' onKeyPress

    Public Delegate Sub OnKeyPressDelegate(sender as HTMLElement, e As KeyboardEvent)

    Public Custom Event onKeyPress As OnKeyPressDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As KeyboardEvent))
        If Not assigned(_onKeyPress) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onKeyPress", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onKeyPress(sender, CType(e, KeyboardEvent)))
        End If
        AddHandler _onKeyPress, Value
      End AddHandler
      RemoveHandler(aEvent As OnKeyPressDelegate)
        RemoveHandler _onKeyPress, Value
        If Not assigned(_onKeyPress) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onKeyPress")
        End If
      End RemoveHandler
    End Event

    Private Event _onKeyPress As OnKeyPressDelegate

    ' onKeyUp

    Public Delegate Sub OnKeyUpDelegate(sender as HTMLElement, e As KeyboardEvent)

    Public Custom Event onKeyUp As OnKeyUpDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As KeyboardEvent))
        If Not assigned(_onKeyUp) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onKeyUp", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onKeyUp(sender, CType(e, KeyboardEvent)))
        End If
        AddHandler _onKeyUp, Value
      End AddHandler
      RemoveHandler(aEvent As OnKeyUpDelegate)
        RemoveHandler _onKeyUp, Value
        If Not assigned(_onKeyUp) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onKeyUp")
        End If
      End RemoveHandler
    End Event

    Private Event _onKeyUp As OnKeyUpDelegate

    ' onLoad

    Public Delegate Sub OnLoadDelegate(sender as HTMLElement, e As Dom.Event)

    Public Custom Event onLoad As OnLoadDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
        If Not assigned(_onLoad) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onLoad", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onLoad(sender, CType(e, Dom.Event)))
        End If
        AddHandler _onLoad, Value
      End AddHandler
      RemoveHandler(aEvent As OnLoadDelegate)
        RemoveHandler _onLoad, Value
        If Not assigned(_onLoad) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onLoad")
        End If
      End RemoveHandler
    End Event

    Private Event _onLoad As OnLoadDelegate

    ' onLoadedData

    Public Delegate Sub OnLoadedDataDelegate(sender as HTMLElement, e As Dom.Event)

    Public Custom Event onLoadedData As OnLoadedDataDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
        If Not assigned(_onLoadedData) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onLoadedData", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onLoadedData(sender, CType(e, Dom.Event)))
        End If
        AddHandler _onLoadedData, Value
      End AddHandler
      RemoveHandler(aEvent As OnLoadedDataDelegate)
        RemoveHandler _onLoadedData, Value
        If Not assigned(_onLoadedData) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onLoadedData")
        End If
      End RemoveHandler
    End Event

    Private Event _onLoadedData As OnLoadedDataDelegate

    ' onLoadedMetaData

    Public Delegate Sub OnLoadedMetaDataDelegate(sender as HTMLElement, e As Dom.Event)

    Public Custom Event onLoadedMetaData As OnLoadedMetaDataDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
        If Not assigned(_onLoadedMetaData) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onLoadedMetaData", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onLoadedMetaData(sender, CType(e, Dom.Event)))
        End If
        AddHandler _onLoadedMetaData, Value
      End AddHandler
      RemoveHandler(aEvent As OnLoadedMetaDataDelegate)
        RemoveHandler _onLoadedMetaData, Value
        If Not assigned(_onLoadedMetaData) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onLoadedMetaData")
        End If
      End RemoveHandler
    End Event

    Private Event _onLoadedMetaData As OnLoadedMetaDataDelegate

    ' onLoadEnd

    Public Delegate Sub OnLoadEndDelegate(sender as HTMLElement, e As ProgressEvent)

    Public Custom Event onLoadEnd As OnLoadEndDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As ProgressEvent))
        If Not assigned(_onLoadEnd) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onLoadEnd", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onLoadEnd(sender, CType(e, ProgressEvent)))
        End If
        AddHandler _onLoadEnd, Value
      End AddHandler
      RemoveHandler(aEvent As OnLoadEndDelegate)
        RemoveHandler _onLoadEnd, Value
        If Not assigned(_onLoadEnd) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onLoadEnd")
        End If
      End RemoveHandler
    End Event

    Private Event _onLoadEnd As OnLoadEndDelegate

    ' onLoadStart

    Public Delegate Sub OnLoadStartDelegate(sender as HTMLElement, e As ProgressEvent)

    Public Custom Event onLoadStart As OnLoadStartDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As ProgressEvent))
        If Not assigned(_onLoadStart) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onLoadStart", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onLoadStart(sender, CType(e, ProgressEvent)))
        End If
        AddHandler _onLoadStart, Value
      End AddHandler
      RemoveHandler(aEvent As OnLoadStartDelegate)
        RemoveHandler _onLoadStart, Value
        If Not assigned(_onLoadStart) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onLoadStart")
        End If
      End RemoveHandler
    End Event

    Private Event _onLoadStart As OnLoadStartDelegate

    ' onLostPointerCapture

    Public Delegate Sub OnLostPointerCaptureDelegate(sender as HTMLElement, e As PointerEvent)

    Public Custom Event onLostPointerCapture As OnLostPointerCaptureDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As PointerEvent))
        If Not assigned(_onLostPointerCapture) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onLostPointerCapture", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onLostPointerCapture(sender, CType(e, PointerEvent)))
        End If
        AddHandler _onLostPointerCapture, Value
      End AddHandler
      RemoveHandler(aEvent As OnLostPointerCaptureDelegate)
        RemoveHandler _onLostPointerCapture, Value
        If Not assigned(_onLostPointerCapture) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onLostPointerCapture")
        End If
      End RemoveHandler
    End Event

    Private Event _onLostPointerCapture As OnLostPointerCaptureDelegate

    ' onMouseDown

    Public Delegate Sub OnMouseDownDelegate(sender as HTMLElement, e As MouseEvent)

    Public Custom Event onMouseDown As OnMouseDownDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As MouseEvent))
        If Not assigned(_onMouseDown) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onMouseDown", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onMouseDown(sender, CType(e, MouseEvent)))
        End If
        AddHandler _onMouseDown, Value
      End AddHandler
      RemoveHandler(aEvent As OnMouseDownDelegate)
        RemoveHandler _onMouseDown, Value
        If Not assigned(_onMouseDown) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onMouseDown")
        End If
      End RemoveHandler
    End Event

    Private Event _onMouseDown As OnMouseDownDelegate

    ' onMouseEnter

    Public Delegate Sub OnMouseEnterDelegate(sender as HTMLElement, e As MouseEvent)

    Public Custom Event onMouseEnter As OnMouseEnterDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As MouseEvent))
        If Not assigned(_onMouseEnter) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onMouseEnter", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onMouseEnter(sender, CType(e, MouseEvent)))
        End If
        AddHandler _onMouseEnter, Value
      End AddHandler
      RemoveHandler(aEvent As OnMouseEnterDelegate)
        RemoveHandler _onMouseEnter, Value
        If Not assigned(_onMouseEnter) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onMouseEnter")
        End If
      End RemoveHandler
    End Event

    Private Event _onMouseEnter As OnMouseEnterDelegate

    ' onMouseLeave

    Public Delegate Sub OnMouseLeaveDelegate(sender as HTMLElement, e As MouseEvent)

    Public Custom Event onMouseLeave As OnMouseLeaveDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As MouseEvent))
        If Not assigned(_onMouseLeave) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onMouseLeave", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onMouseLeave(sender, CType(e, MouseEvent)))
        End If
        AddHandler _onMouseLeave, Value
      End AddHandler
      RemoveHandler(aEvent As OnMouseLeaveDelegate)
        RemoveHandler _onMouseLeave, Value
        If Not assigned(_onMouseLeave) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onMouseLeave")
        End If
      End RemoveHandler
    End Event

    Private Event _onMouseLeave As OnMouseLeaveDelegate

    ' onMouseMove

    Public Delegate Sub OnMouseMoveDelegate(sender as HTMLElement, e As MouseEvent)

    Public Custom Event onMouseMove As OnMouseMoveDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As MouseEvent))
        If Not assigned(_onMouseMove) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onMouseMove", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onMouseMove(sender, CType(e, MouseEvent)))
        End If
        AddHandler _onMouseMove, Value
      End AddHandler
      RemoveHandler(aEvent As OnMouseMoveDelegate)
        RemoveHandler _onMouseMove, Value
        If Not assigned(_onMouseMove) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onMouseMove")
        End If
      End RemoveHandler
    End Event

    Private Event _onMouseMove As OnMouseMoveDelegate

    ' onMouseOut

    Public Delegate Sub OnMouseOutDelegate(sender as HTMLElement, e As MouseEvent)

    Public Custom Event onMouseOut As OnMouseOutDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As MouseEvent))
        If Not assigned(_onMouseOut) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onMouseOut", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onMouseOut(sender, CType(e, MouseEvent)))
        End If
        AddHandler _onMouseOut, Value
      End AddHandler
      RemoveHandler(aEvent As OnMouseOutDelegate)
        RemoveHandler _onMouseOut, Value
        If Not assigned(_onMouseOut) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onMouseOut")
        End If
      End RemoveHandler
    End Event

    Private Event _onMouseOut As OnMouseOutDelegate

    ' onWheel

    Public Delegate Sub OnWheelDelegate(sender as HTMLElement, e As WheelEvent)

    Public Custom Event onWheel As OnWheelDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As WheelEvent))
        If Not assigned(_onWheel) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onWheel", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onWheel(sender, CType(e, WheelEvent)))
        End If
        AddHandler _onWheel, Value
      End AddHandler
      RemoveHandler(aEvent As OnWheelDelegate)
        RemoveHandler _onWheel, Value
        If Not assigned(_onWheel) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onWheel")
        End If
      End RemoveHandler
    End Event

    Private Event _onWheel As OnWheelDelegate

    ' onPause

    Public Delegate Sub OnPauseDelegate(sender as HTMLElement, e As Dom.Event)

    Public Custom Event onPause As OnPauseDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
        If Not assigned(_onPause) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onPause", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onPause(sender, CType(e, Dom.Event)))
        End If
        AddHandler _onPause, Value
      End AddHandler
      RemoveHandler(aEvent As OnPauseDelegate)
        RemoveHandler _onPause, Value
        If Not assigned(_onPause) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onPause")
        End If
      End RemoveHandler
    End Event

    Private Event _onPause As OnPauseDelegate

    ' onPlay

    Public Delegate Sub OnPlayDelegate(sender as HTMLElement, e As Dom.Event)

    Public Custom Event onPlay As OnPlayDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
        If Not assigned(_onPlay) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onPlay", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onPlay(sender, CType(e, Dom.Event)))
        End If
        AddHandler _onPlay, Value
      End AddHandler
      RemoveHandler(aEvent As OnPlayDelegate)
        RemoveHandler _onPlay, Value
        If Not assigned(_onPlay) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onPlay")
        End If
      End RemoveHandler
    End Event

    Private Event _onPlay As OnPlayDelegate

    ' onPlaying

    Public Delegate Sub OnPlayingDelegate(sender as HTMLElement, e As Dom.Event)

    Public Custom Event onPlaying As OnPlayingDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
        If Not assigned(_onPlaying) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onPlaying", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onPlaying(sender, CType(e, Dom.Event)))
        End If
        AddHandler _onPlaying, Value
      End AddHandler
      RemoveHandler(aEvent As OnPlayingDelegate)
        RemoveHandler _onPlaying, Value
        If Not assigned(_onPlaying) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onPlaying")
        End If
      End RemoveHandler
    End Event

    Private Event _onPlaying As OnPlayingDelegate

    ' onPointerDown

    Public Delegate Sub OnPointerDownDelegate(sender as HTMLElement, e As PointerEvent)

    Public Custom Event onPointerDown As OnPointerDownDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As PointerEvent))
        If Not assigned(_onPointerDown) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onPointerDown", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onPointerDown(sender, CType(e, PointerEvent)))
        End If
        AddHandler _onPointerDown, Value
      End AddHandler
      RemoveHandler(aEvent As OnPointerDownDelegate)
        RemoveHandler _onPointerDown, Value
        If Not assigned(_onPointerDown) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onPointerDown")
        End If
      End RemoveHandler
    End Event

    Private Event _onPointerDown As OnPointerDownDelegate

    ' onPointerMove

    Public Delegate Sub OnPointerMoveDelegate(sender as HTMLElement, e As PointerEvent)

    Public Custom Event onPointerMove As OnPointerMoveDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As PointerEvent))
        If Not assigned(_onPointerMove) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onPointerMove", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onPointerMove(sender, CType(e, PointerEvent)))
        End If
        AddHandler _onPointerMove, Value
      End AddHandler
      RemoveHandler(aEvent As OnPointerMoveDelegate)
        RemoveHandler _onPointerMove, Value
        If Not assigned(_onPointerMove) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onPointerMove")
        End If
      End RemoveHandler
    End Event

    Private Event _onPointerMove As OnPointerMoveDelegate

    ' onPointerUp

    Public Delegate Sub OnPointerUpDelegate(sender as HTMLElement, e As PointerEvent)

    Public Custom Event onPointerUp As OnPointerUpDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As PointerEvent))
        If Not assigned(_onPointerUp) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onPointerUp", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onPointerUp(sender, CType(e, PointerEvent)))
        End If
        AddHandler _onPointerUp, Value
      End AddHandler
      RemoveHandler(aEvent As OnPointerUpDelegate)
        RemoveHandler _onPointerUp, Value
        If Not assigned(_onPointerUp) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onPointerUp")
        End If
      End RemoveHandler
    End Event

    Private Event _onPointerUp As OnPointerUpDelegate

    ' onPointerCancel

    Public Delegate Sub OnPointerCancelDelegate(sender as HTMLElement, e As PointerEvent)

    Public Custom Event onPointerCancel As OnPointerCancelDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As PointerEvent))
        If Not assigned(_onPointerCancel) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onPointerCancel", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onPointerCancel(sender, CType(e, PointerEvent)))
        End If
        AddHandler _onPointerCancel, Value
      End AddHandler
      RemoveHandler(aEvent As OnPointerCancelDelegate)
        RemoveHandler _onPointerCancel, Value
        If Not assigned(_onPointerCancel) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onPointerCancel")
        End If
      End RemoveHandler
    End Event

    Private Event _onPointerCancel As OnPointerCancelDelegate

    ' onPointerOver

    Public Delegate Sub OnPointerOverDelegate(sender as HTMLElement, e As PointerEvent)

    Public Custom Event onPointerOver As OnPointerOverDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As PointerEvent))
        If Not assigned(_onPointerOver) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onPointerOver", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onPointerOver(sender, CType(e, PointerEvent)))
        End If
        AddHandler _onPointerOver, Value
      End AddHandler
      RemoveHandler(aEvent As OnPointerOverDelegate)
        RemoveHandler _onPointerOver, Value
        If Not assigned(_onPointerOver) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onPointerOver")
        End If
      End RemoveHandler
    End Event

    Private Event _onPointerOver As OnPointerOverDelegate

    ' onPointerOut

    Public Delegate Sub OnPointerOutDelegate(sender as HTMLElement, e As PointerEvent)

    Public Custom Event onPointerOut As OnPointerOutDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As PointerEvent))
        If Not assigned(_onPointerOut) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onPointerOut", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onPointerOut(sender, CType(e, PointerEvent)))
        End If
        AddHandler _onPointerOut, Value
      End AddHandler
      RemoveHandler(aEvent As OnPointerOutDelegate)
        RemoveHandler _onPointerOut, Value
        If Not assigned(_onPointerOut) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onPointerOut")
        End If
      End RemoveHandler
    End Event

    Private Event _onPointerOut As OnPointerOutDelegate

    ' onPointerEnter

    Public Delegate Sub OnPointerEnterDelegate(sender as HTMLElement, e As PointerEvent)

    Public Custom Event onPointerEnter As OnPointerEnterDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As PointerEvent))
        If Not assigned(_onPointerEnter) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onPointerEnter", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onPointerEnter(sender, CType(e, PointerEvent)))
        End If
        AddHandler _onPointerEnter, Value
      End AddHandler
      RemoveHandler(aEvent As OnPointerEnterDelegate)
        RemoveHandler _onPointerEnter, Value
        If Not assigned(_onPointerEnter) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onPointerEnter")
        End If
      End RemoveHandler
    End Event

    Private Event _onPointerEnter As OnPointerEnterDelegate

    ' onPointerLeave

    Public Delegate Sub OnPointerLeaveDelegate(sender as HTMLElement, e As PointerEvent)

    Public Custom Event onPointerLeave As OnPointerLeaveDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As PointerEvent))
        If Not assigned(_onPointerLeave) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onPointerLeave", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onPointerLeave(sender, CType(e, PointerEvent)))
        End If
        AddHandler _onPointerLeave, Value
      End AddHandler
      RemoveHandler(aEvent As OnPointerLeaveDelegate)
        RemoveHandler _onPointerLeave, Value
        If Not assigned(_onPointerLeave) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onPointerLeave")
        End If
      End RemoveHandler
    End Event

    Private Event _onPointerLeave As OnPointerLeaveDelegate

    ' onProgress

    Public Delegate Sub OnProgressDelegate(sender as HTMLElement, e As ProgressEvent)

    Public Custom Event onProgress As OnProgressDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As ProgressEvent))
        If Not assigned(_onProgress) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onProgress", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onProgress(sender, CType(e, ProgressEvent)))
        End If
        AddHandler _onProgress, Value
      End AddHandler
      RemoveHandler(aEvent As OnProgressDelegate)
        RemoveHandler _onProgress, Value
        If Not assigned(_onProgress) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onProgress")
        End If
      End RemoveHandler
    End Event

    Private Event _onProgress As OnProgressDelegate

    ' onRateChange

    Public Delegate Sub OnRateChangeDelegate(sender as HTMLElement, e As Dom.Event)

    Public Custom Event onRateChange As OnRateChangeDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
        If Not assigned(_onRateChange) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onRateChange", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onRateChange(sender, CType(e, Dom.Event)))
        End If
        AddHandler _onRateChange, Value
      End AddHandler
      RemoveHandler(aEvent As OnRateChangeDelegate)
        RemoveHandler _onRateChange, Value
        If Not assigned(_onRateChange) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onRateChange")
        End If
      End RemoveHandler
    End Event

    Private Event _onRateChange As OnRateChangeDelegate

    ' onReset

    Public Delegate Sub OnResetDelegate(sender as HTMLElement, e As Dom.Event)

    Public Custom Event onReset As OnResetDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
        If Not assigned(_onReset) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onReset", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onReset(sender, CType(e, Dom.Event)))
        End If
        AddHandler _onReset, Value
      End AddHandler
      RemoveHandler(aEvent As OnResetDelegate)
        RemoveHandler _onReset, Value
        If Not assigned(_onReset) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onReset")
        End If
      End RemoveHandler
    End Event

    Private Event _onReset As OnResetDelegate

    ' onResize

    Public Delegate Sub OnResizeDelegate(sender as HTMLElement, e As UIEvent)

    Public Custom Event onResize As OnResizeDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As UIEvent))
        If Not assigned(_onResize) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onResize", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onResize(sender, CType(e, UIEvent)))
        End If
        AddHandler _onResize, Value
      End AddHandler
      RemoveHandler(aEvent As OnResizeDelegate)
        RemoveHandler _onResize, Value
        If Not assigned(_onResize) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onResize")
        End If
      End RemoveHandler
    End Event

    Private Event _onResize As OnResizeDelegate

    ' onScroll

    Public Delegate Sub OnScrollDelegate(sender as HTMLElement, e As Dom.Event)

    Public Custom Event onScroll As OnScrollDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
        If Not assigned(_onScroll) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onScroll", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onScroll(sender, CType(e, Dom.Event)))
        End If
        AddHandler _onScroll, Value
      End AddHandler
      RemoveHandler(aEvent As OnScrollDelegate)
        RemoveHandler _onScroll, Value
        If Not assigned(_onScroll) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onScroll")
        End If
      End RemoveHandler
    End Event

    Private Event _onScroll As OnScrollDelegate

    ' onSeeked

    Public Delegate Sub OnSeekedDelegate(sender as HTMLElement, e As Dom.Event)

    Public Custom Event onSeeked As OnSeekedDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
        If Not assigned(_onSeeked) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onSeeked", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onSeeked(sender, CType(e, Dom.Event)))
        End If
        AddHandler _onSeeked, Value
      End AddHandler
      RemoveHandler(aEvent As OnSeekedDelegate)
        RemoveHandler _onSeeked, Value
        If Not assigned(_onSeeked) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onSeeked")
        End If
      End RemoveHandler
    End Event

    Private Event _onSeeked As OnSeekedDelegate

    ' onSeeking

    Public Delegate Sub OnSeekingDelegate(sender as HTMLElement, e As Dom.Event)

    Public Custom Event onSeeking As OnSeekingDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
        If Not assigned(_onSeeking) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onSeeking", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onSeeking(sender, CType(e, Dom.Event)))
        End If
        AddHandler _onSeeking, Value
      End AddHandler
      RemoveHandler(aEvent As OnSeekingDelegate)
        RemoveHandler _onSeeking, Value
        If Not assigned(_onSeeking) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onSeeking")
        End If
      End RemoveHandler
    End Event

    Private Event _onSeeking As OnSeekingDelegate

    ' onSelect

    Public Delegate Sub OnSelectDelegate(sender as HTMLElement, e As UIEvent)

    Public Custom Event onSelect As OnSelectDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As UIEvent))
        If Not assigned(_onSelect) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onSelect", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onSelect(sender, CType(e, UIEvent)))
        End If
        AddHandler _onSelect, Value
      End AddHandler
      RemoveHandler(aEvent As OnSelectDelegate)
        RemoveHandler _onSelect, Value
        If Not assigned(_onSelect) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onSelect")
        End If
      End RemoveHandler
    End Event

    Private Event _onSelect As OnSelectDelegate

    ' onSelectStart

    Public Delegate Sub OnSelectStartDelegate(sender as HTMLElement, e As Dom.Event)

    Public Custom Event onSelectStart As OnSelectStartDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
        If Not assigned(_onSelectStart) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onSelectStart", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onSelectStart(sender, CType(e, Dom.Event)))
        End If
        AddHandler _onSelectStart, Value
      End AddHandler
      RemoveHandler(aEvent As OnSelectStartDelegate)
        RemoveHandler _onSelectStart, Value
        If Not assigned(_onSelectStart) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onSelectStart")
        End If
      End RemoveHandler
    End Event

    Private Event _onSelectStart As OnSelectStartDelegate

    ' onSelectionChange

    Public Delegate Sub OnSelectionChangeDelegate(sender as HTMLElement, e As Dom.Event)

    Public Custom Event onSelectionChange As OnSelectionChangeDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
        If Not assigned(_onSelectionChange) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onSelectionChange", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onSelectionChange(sender, CType(e, Dom.Event)))
        End If
        AddHandler _onSelectionChange, Value
      End AddHandler
      RemoveHandler(aEvent As OnSelectionChangeDelegate)
        RemoveHandler _onSelectionChange, Value
        If Not assigned(_onSelectionChange) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onSelectionChange")
        End If
      End RemoveHandler
    End Event

    Private Event _onSelectionChange As OnSelectionChangeDelegate

    ' onStalled

    Public Delegate Sub OnStalledDelegate(sender as HTMLElement, e As Dom.Event)

    Public Custom Event onStalled As OnStalledDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
        If Not assigned(_onStalled) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onStalled", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onStalled(sender, CType(e, Dom.Event)))
        End If
        AddHandler _onStalled, Value
      End AddHandler
      RemoveHandler(aEvent As OnStalledDelegate)
        RemoveHandler _onStalled, Value
        If Not assigned(_onStalled) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onStalled")
        End If
      End RemoveHandler
    End Event

    Private Event _onStalled As OnStalledDelegate

    ' onSubmit

    Public Delegate Sub OnSubmitDelegate(sender as HTMLElement, e As SubmitEvent)

    Public Custom Event onSubmit As OnSubmitDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As SubmitEvent))
        If Not assigned(_onSubmit) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onSubmit", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onSubmit(sender, CType(e, SubmitEvent)))
        End If
        AddHandler _onSubmit, Value
      End AddHandler
      RemoveHandler(aEvent As OnSubmitDelegate)
        RemoveHandler _onSubmit, Value
        If Not assigned(_onSubmit) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onSubmit")
        End If
      End RemoveHandler
    End Event

    Private Event _onSubmit As OnSubmitDelegate

    ' onSuspend

    Public Delegate Sub OnSuspendDelegate(sender as HTMLElement, e As Dom.Event)

    Public Custom Event onSuspend As OnSuspendDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
        If Not assigned(_onSuspend) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onSuspend", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onSuspend(sender, CType(e, Dom.Event)))
        End If
        AddHandler _onSuspend, Value
      End AddHandler
      RemoveHandler(aEvent As OnSuspendDelegate)
        RemoveHandler _onSuspend, Value
        If Not assigned(_onSuspend) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onSuspend")
        End If
      End RemoveHandler
    End Event

    Private Event _onSuspend As OnSuspendDelegate

    ' onTimeUpdate

    Public Delegate Sub OnTimeUpdateDelegate(sender as HTMLElement, e As Dom.Event)

    Public Custom Event onTimeUpdate As OnTimeUpdateDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
        If Not assigned(_onTimeUpdate) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onTimeUpdate", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onTimeUpdate(sender, CType(e, Dom.Event)))
        End If
        AddHandler _onTimeUpdate, Value
      End AddHandler
      RemoveHandler(aEvent As OnTimeUpdateDelegate)
        RemoveHandler _onTimeUpdate, Value
        If Not assigned(_onTimeUpdate) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onTimeUpdate")
        End If
      End RemoveHandler
    End Event

    Private Event _onTimeUpdate As OnTimeUpdateDelegate

    ' onVolumeChange

    Public Delegate Sub OnVolumeChangeDelegate(sender as HTMLElement, e As Dom.Event)

    Public Custom Event onVolumeChange As OnVolumeChangeDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
        If Not assigned(_onVolumeChange) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onVolumeChange", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onVolumeChange(sender, CType(e, Dom.Event)))
        End If
        AddHandler _onVolumeChange, Value
      End AddHandler
      RemoveHandler(aEvent As OnVolumeChangeDelegate)
        RemoveHandler _onVolumeChange, Value
        If Not assigned(_onVolumeChange) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onVolumeChange")
        End If
      End RemoveHandler
    End Event

    Private Event _onVolumeChange As OnVolumeChangeDelegate

    ' onWaiting

    Public Delegate Sub OnWaitingDelegate(sender as HTMLElement, e As Dom.Event)

    Public Custom Event onWaiting As OnWaitingDelegate
      AddHandler(aEvent As Sub(sender as HTMLElement, e As Dom.Event))
        If Not assigned(_onWaiting) Then
          RemObjects.Elements.WebAssembly.WasmEvents.SetEvent(_HtmlElement, "onWaiting", Sub(sender as HTMLElement, e As Dynamic) RaiseEvent _onWaiting(sender, CType(e, Dom.Event)))
        End If
        AddHandler _onWaiting, Value
      End AddHandler
      RemoveHandler(aEvent As OnWaitingDelegate)
        RemoveHandler _onWaiting, Value
        If Not assigned(_onWaiting) then
          RemObjects.Elements.WebAssembly.WasmEvents.ClearEvent(_HtmlElement, "onWaiting")
        End If
      End RemoveHandler
    End Event

    Private Event _onWaiting As OnWaitingDelegate

  End Class

  Public class HTMLAnchorElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLAnchorElement

    Public Shadows ReadOnly Property HtmlElement As HTMLAnchorElement Implements Public HTMLAnchorElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLAnchorElement)
      End Get
    End Property
  End Class

  Public class HTMLDListElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLDListElement

    Public Shadows ReadOnly Property HtmlElement As HTMLDListElement Implements Public HTMLDListElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLDListElement)
      End Get
    End Property
  End Class

  Public class HTMLHeadingElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLHeadingElement

    Public Shadows ReadOnly Property HtmlElement As HTMLHeadingElement Implements Public HTMLHeadingElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLHeadingElement)
      End Get
    End Property
  End Class

  Public class HTMLImageElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLImageElement

    Public Shadows ReadOnly Property HtmlElement As HTMLImageElement Implements Public HTMLImageElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLImageElement)
      End Get
    End Property
  End Class

  Public class HTMLAreaElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLAreaElement

    Public Shadows ReadOnly Property HtmlElement As HTMLAreaElement Implements Public HTMLAreaElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLAreaElement)
      End Get
    End Property
  End Class

  Public class HTMLAudioElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLAudioElement

    Public Shadows ReadOnly Property HtmlElement As HTMLAudioElement Implements Public HTMLAudioElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLAudioElement)
      End Get
    End Property
  End Class

  Public class HTMLBRElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLBRElement

    Public Shadows ReadOnly Property HtmlElement As HTMLBRElement Implements Public HTMLBRElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLBRElement)
      End Get
    End Property
  End Class

  Public class HTMLBodyElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLBodyElement

    Public Shadows ReadOnly Property HtmlElement As HTMLBodyElement Implements Public HTMLBodyElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLBodyElement)
      End Get
    End Property
  End Class

  Public class HTMLButtonElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLButtonElement
    Implements HTMLButtonElement

    Public Shadows ReadOnly Property HtmlElement As HTMLButtonElement Implements Public HTMLButtonElement
      Implements HTMLButtonElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLButtonElement)
      End Get
    End Property
  End Class

  Public class HTMLCanvasElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLCanvasElement

    Public Shadows ReadOnly Property HtmlElement As HTMLCanvasElement Implements Public HTMLCanvasElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLCanvasElement)
      End Get
    End Property
  End Class

  Public class HTMLDataElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLDataElement

    Public Shadows ReadOnly Property HtmlElement As HTMLDataElement Implements Public HTMLDataElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLDataElement)
      End Get
    End Property
  End Class

  Public class HTMLDataListElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLDataListElement

    Public Shadows ReadOnly Property HtmlElement As HTMLDataListElement Implements Public HTMLDataListElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLDataListElement)
      End Get
    End Property
  End Class

  Public class HTMLDetailsElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLDetailsElement

    Public Shadows ReadOnly Property HtmlElement As HTMLDetailsElement Implements Public HTMLDetailsElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLDetailsElement)
      End Get
    End Property
  End Class

  Public class HTMLDivElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLDivElement

    Public Shadows ReadOnly Property HtmlElement As HTMLDivElement Implements Public HTMLDivElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLDivElement)
      End Get
    End Property
  End Class

  Public class HTMLEmbedElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLEmbedElement

    Public Shadows ReadOnly Property HtmlElement As HTMLEmbedElement Implements Public HTMLEmbedElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLEmbedElement)
      End Get
    End Property
  End Class

  Public class HTMLFieldSetElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLFieldSetElement

    Public Shadows ReadOnly Property HtmlElement As HTMLFieldSetElement Implements Public HTMLFieldSetElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLFieldSetElement)
      End Get
    End Property
  End Class

  Public class HTMLFormElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLFormElement

    Public Shadows ReadOnly Property HtmlElement As HTMLFormElement Implements Public HTMLFormElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLFormElement)
      End Get
    End Property
  End Class

  Public class HTMLHRElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLHRElement

    Public Shadows ReadOnly Property HtmlElement As HTMLHRElement Implements Public HTMLHRElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLHRElement)
      End Get
    End Property
  End Class

  Public class HTMLIFrameElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLIFrameElement

    Public Shadows ReadOnly Property HtmlElement As HTMLIFrameElement Implements Public HTMLIFrameElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLIFrameElement)
      End Get
    End Property
  End Class

  Public class HTMLInputElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLInputElement

    Public Shadows ReadOnly Property HtmlElement As HTMLInputElement Implements Public HTMLInputElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLInputElement)
      End Get
    End Property
  End Class

  Public class HTMLLIElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLLIElement

    Public Shadows ReadOnly Property HtmlElement As HTMLLIElement Implements Public HTMLLIElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLLIElement)
      End Get
    End Property
  End Class

  Public class HTMLLabelElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLLabelElement

    Public Shadows ReadOnly Property HtmlElement As HTMLLabelElement Implements Public HTMLLabelElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLLabelElement)
      End Get
    End Property
  End Class

  Public class HTMLLegendElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLLegendElement

    Public Shadows ReadOnly Property HtmlElement As HTMLLegendElement Implements Public HTMLLegendElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLLegendElement)
      End Get
    End Property
  End Class

  Public class HTMLLinkElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLLinkElement

    Public Shadows ReadOnly Property HtmlElement As HTMLLinkElement Implements Public HTMLLinkElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLLinkElement)
      End Get
    End Property
  End Class

  Public class HTMLMapElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLMapElement

    Public Shadows ReadOnly Property HtmlElement As HTMLMapElement Implements Public HTMLMapElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLMapElement)
      End Get
    End Property
  End Class

  Public class HTMLMediaElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLMediaElement

    Public Shadows ReadOnly Property HtmlElement As HTMLMediaElement Implements Public HTMLMediaElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLMediaElement)
      End Get
    End Property
  End Class

  Public class HTMLMetaElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLMetaElement

    Public Shadows ReadOnly Property HtmlElement As HTMLMetaElement Implements Public HTMLMetaElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLMetaElement)
      End Get
    End Property
  End Class

  Public class HTMLMeterElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLMeterElement

    Public Shadows ReadOnly Property HtmlElement As HTMLMeterElement Implements Public HTMLMeterElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLMeterElement)
      End Get
    End Property
  End Class

  Public class HTMLModElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLModElement

    Public Shadows ReadOnly Property HtmlElement As HTMLModElement Implements Public HTMLModElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLModElement)
      End Get
    End Property
  End Class

  Public class HTMLOListElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLOListElement

    Public Shadows ReadOnly Property HtmlElement As HTMLOListElement Implements Public HTMLOListElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLOListElement)
      End Get
    End Property
  End Class

  Public class HTMLObjectElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLObjectElement

    Public Shadows ReadOnly Property HtmlElement As HTMLObjectElement Implements Public HTMLObjectElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLObjectElement)
      End Get
    End Property
  End Class

  Public class HTMLOptGroupElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLOptGroupElement

    Public Shadows ReadOnly Property HtmlElement As HTMLOptGroupElement Implements Public HTMLOptGroupElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLOptGroupElement)
      End Get
    End Property
  End Class

  Public class HTMLOptionElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLOptionElement

    Public Shadows ReadOnly Property HtmlElement As HTMLOptionElement Implements Public HTMLOptionElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLOptionElement)
      End Get
    End Property
  End Class

  Public class HTMLOutputElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLOutputElement

    Public Shadows ReadOnly Property HtmlElement As HTMLOutputElement Implements Public HTMLOutputElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLOutputElement)
      End Get
    End Property
  End Class

  Public class HTMLParagraphElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLParagraphElement

    Public Shadows ReadOnly Property HtmlElement As HTMLParagraphElement Implements Public HTMLParagraphElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLParagraphElement)
      End Get
    End Property
  End Class

  Public class HTMLParamElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLParamElement

    Public Shadows ReadOnly Property HtmlElement As HTMLParamElement Implements Public HTMLParamElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLParamElement)
      End Get
    End Property
  End Class

  Public class HTMLPreElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLPreElement

    Public Shadows ReadOnly Property HtmlElement As HTMLPreElement Implements Public HTMLPreElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLPreElement)
      End Get
    End Property
  End Class

  Public class HTMLProgressElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLProgressElement

    Public Shadows ReadOnly Property HtmlElement As HTMLProgressElement Implements Public HTMLProgressElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLProgressElement)
      End Get
    End Property
  End Class

  Public class HTMLQuoteElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLQuoteElement

    Public Shadows ReadOnly Property HtmlElement As HTMLQuoteElement Implements Public HTMLQuoteElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLQuoteElement)
      End Get
    End Property
  End Class

  Public class HTMLScriptElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLScriptElement

    Public Shadows ReadOnly Property HtmlElement As HTMLScriptElement Implements Public HTMLScriptElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLScriptElement)
      End Get
    End Property
  End Class

  Public class HTMLSelectElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLSelectElement

    Public Shadows ReadOnly Property HtmlElement As HTMLSelectElement Implements Public HTMLSelectElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLSelectElement)
      End Get
    End Property
  End Class

  Public class HTMLSlotElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLSlotElement

    Public Shadows ReadOnly Property HtmlElement As HTMLSlotElement Implements Public HTMLSlotElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLSlotElement)
      End Get
    End Property
  End Class

  Public class HTMLSourceElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLSourceElement

    Public Shadows ReadOnly Property HtmlElement As HTMLSourceElement Implements Public HTMLSourceElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLSourceElement)
      End Get
    End Property
  End Class

  Public class HTMLSpanElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLSpanElement

    Public Shadows ReadOnly Property HtmlElement As HTMLSpanElement Implements Public HTMLSpanElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLSpanElement)
      End Get
    End Property
  End Class

  Public class HTMLStyleElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLStyleElement

    Public Shadows ReadOnly Property HtmlElement As HTMLStyleElement Implements Public HTMLStyleElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLStyleElement)
      End Get
    End Property
  End Class

  Public class HTMLTableCaptionElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLTableCaptionElement

    Public Shadows ReadOnly Property HtmlElement As HTMLTableCaptionElement Implements Public HTMLTableCaptionElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLTableCaptionElement)
      End Get
    End Property
  End Class

  Public class HTMLTableCellElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLTableCellElement

    Public Shadows ReadOnly Property HtmlElement As HTMLTableCellElement Implements Public HTMLTableCellElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLTableCellElement)
      End Get
    End Property
  End Class

  Public class HTMLTableColElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLTableColElement

    Public Shadows ReadOnly Property HtmlElement As HTMLTableColElement Implements Public HTMLTableColElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLTableColElement)
      End Get
    End Property
  End Class

  Public class HTMLTableElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLTableElement

    Public Shadows ReadOnly Property HtmlElement As HTMLTableElement Implements Public HTMLTableElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLTableElement)
      End Get
    End Property
  End Class

  Public class HTMLTableRowElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLTableRowElement

    Public Shadows ReadOnly Property HtmlElement As HTMLTableRowElement Implements Public HTMLTableRowElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLTableRowElement)
      End Get
    End Property
  End Class

  Public class HTMLTableSectionElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLTableSectionElement

    Public Shadows ReadOnly Property HtmlElement As HTMLTableSectionElement Implements Public HTMLTableSectionElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLTableSectionElement)
      End Get
    End Property
  End Class

  Public class HTMLTemplateElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLTemplateElement

    Public Shadows ReadOnly Property HtmlElement As HTMLTemplateElement Implements Public HTMLTemplateElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLTemplateElement)
      End Get
    End Property
  End Class

  Public class HTMLTextAreaElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLTextAreaElement

    Public Shadows ReadOnly Property HtmlElement As HTMLTextAreaElement Implements Public HTMLTextAreaElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLTextAreaElement)
      End Get
    End Property
  End Class

  Public class HTMLTimeElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLElement

    Public Shadows ReadOnly Property HtmlTimeElement As HTMLElement Implements Public HTMLElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLTimeElement)
      End Get
    End Property
  End Class

  Public class HTMLTitleElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLTitleElement

    Public Shadows ReadOnly Property HtmlElement As HTMLTitleElement Implements Public HTMLTitleElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLTitleElement)
      End Get
    End Property
  End Class

  Public class HTMLTrackElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLTrackElement

    Public Shadows ReadOnly Property HtmlElement As HTMLTrackElement Implements Public HTMLTrackElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLTrackElement)
      End Get
    End Property
  End Class

  Public class HTMLVideoElement_EventProxy
    Inherits HTMLElement_EventProxy
    Implements HTMLVideoElement

    Public Shadows ReadOnly Property HtmlElement As HTMLVideoElement Implements Public HTMLVideoElement
      Get
        Return DirectCast(MyBase.HtmlElement, HTMLVideoElement)
      End Get
    End Property
  End Class

End Namespace